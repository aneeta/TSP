Using license file /Users/anetaswianiewicz/gurobi.lic
Academic license - for non-commercial use only
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
WARNING: Loading a SolverResults object with an 'aborted' status, but
    containing a solution
{'dfj': {'a280': {'optimal_solution': 2579, 'solutions': {('cplex', 60, 600): ({'path_length': 2592.0, 'path': [1, 2, 242, 243, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 246, 245, 244, 247, 250, 251, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 252, 253, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 176, 180, 179, 150, 178, 177, 151, 152, 156, 153, 155, 154, 129, 130, 21, 128, 127, 126, 30, 125, 124, 123, 122, 121, 120, 119, 157, 158, 159, 160, 175, 161, 162, 163, 164, 165, 166, 167, 168, 171, 170, 172, 173, 174, 107, 106, 105, 104, 103, 102, 169, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 109, 108, 110, 111, 112, 88, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 67, 69, 68, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 59, 62, 63, 64, 66, 65, 86, 85, 84, 87, 113, 114, 115, 116, 117, 118, 61, 60, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 28, 27, 26, 22, 25, 23, 24, 14, 15, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 277, 276, 275, 274, 273, 272, 271, 16, 17, 18, 19, 20, 131, 132, 133, 134, 270, 269, 135, 136, 268, 267, 137, 138, 139, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 254, 255, 256, 249, 248, 278, 279, 3, 280], 'time': 141.23050552}, {'Problem': [{'Name': '', 'Lower bound': 2592.0, 'Upper bound': 2592.0, 'Number of objectives': 1, 'Number of constraints': 848, 'Number of variables': 78400, 'Number of binary variables': 78400, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 5.70320200920105, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 60, 1500): ({'path_length': 2592.0, 'path': [1, 2, 242, 243, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 246, 245, 244, 247, 250, 251, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 252, 253, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 176, 180, 179, 150, 178, 177, 151, 152, 156, 153, 155, 154, 129, 130, 21, 128, 127, 126, 30, 125, 124, 123, 122, 121, 120, 119, 157, 158, 159, 160, 175, 161, 162, 163, 164, 165, 166, 167, 168, 171, 170, 172, 173, 174, 107, 106, 105, 104, 103, 102, 169, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 109, 108, 110, 111, 112, 88, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 67, 69, 68, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 59, 62, 63, 64, 66, 65, 86, 85, 84, 87, 113, 114, 115, 116, 117, 118, 61, 60, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 28, 27, 26, 22, 25, 23, 24, 14, 15, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 277, 276, 275, 274, 273, 272, 271, 16, 17, 18, 19, 20, 131, 132, 133, 134, 270, 269, 135, 136, 268, 267, 137, 138, 139, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 254, 255, 256, 249, 248, 278, 279, 3, 280], 'time': 140.953299862}, {'Problem': [{'Name': '', 'Lower bound': 2592.0, 'Upper bound': 2592.0, 'Number of objectives': 1, 'Number of constraints': 848, 'Number of variables': 78400, 'Number of binary variables': 78400, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 5.654435157775879, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 600): ({'path_length': 2592.0, 'path': [1, 2, 242, 243, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 246, 245, 244, 247, 250, 251, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 252, 253, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 176, 180, 179, 150, 178, 177, 151, 152, 156, 153, 155, 154, 129, 130, 21, 128, 127, 126, 30, 125, 124, 123, 122, 121, 120, 119, 157, 158, 159, 160, 175, 161, 162, 163, 164, 165, 166, 167, 168, 171, 170, 172, 173, 174, 107, 106, 105, 104, 103, 102, 169, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 109, 108, 110, 111, 112, 88, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 67, 69, 68, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 59, 62, 63, 64, 66, 65, 86, 85, 84, 87, 113, 114, 115, 116, 117, 118, 61, 60, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 28, 27, 26, 22, 25, 23, 24, 14, 15, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 277, 276, 275, 274, 273, 272, 271, 16, 17, 18, 19, 20, 131, 132, 133, 134, 270, 269, 135, 136, 268, 267, 137, 138, 139, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 254, 255, 256, 249, 248, 278, 279, 3, 280], 'time': 143.530811168}, {'Problem': [{'Name': '', 'Lower bound': 2592.0, 'Upper bound': 2592.0, 'Number of objectives': 1, 'Number of constraints': 848, 'Number of variables': 78400, 'Number of binary variables': 78400, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 5.823844909667969, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 1500): ({'path_length': 2592.0, 'path': [1, 2, 242, 243, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 246, 245, 244, 247, 250, 251, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 252, 253, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 176, 180, 179, 150, 178, 177, 151, 152, 156, 153, 155, 154, 129, 130, 21, 128, 127, 126, 30, 125, 124, 123, 122, 121, 120, 119, 157, 158, 159, 160, 175, 161, 162, 163, 164, 165, 166, 167, 168, 171, 170, 172, 173, 174, 107, 106, 105, 104, 103, 102, 169, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 109, 108, 110, 111, 112, 88, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 67, 69, 68, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 59, 62, 63, 64, 66, 65, 86, 85, 84, 87, 113, 114, 115, 116, 117, 118, 61, 60, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 28, 27, 26, 22, 25, 23, 24, 14, 15, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 277, 276, 275, 274, 273, 272, 271, 16, 17, 18, 19, 20, 131, 132, 133, 134, 270, 269, 135, 136, 268, 267, 137, 138, 139, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 254, 255, 256, 249, 248, 278, 279, 3, 280], 'time': 142.00197819399995}, {'Problem': [{'Name': '', 'Lower bound': 2592.0, 'Upper bound': 2592.0, 'Number of objectives': 1, 'Number of constraints': 848, 'Number of variables': 78400, 'Number of binary variables': 78400, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 5.253012180328369, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 600): ({'path_length': 2592.0, 'path': [1, 280, 3, 279, 278, 248, 249, 256, 255, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 140, 141, 142, 143, 144, 200, 199, 145, 146, 147, 148, 149, 139, 138, 137, 267, 268, 136, 135, 269, 270, 134, 133, 132, 131, 130, 21, 20, 19, 18, 17, 16, 271, 272, 273, 274, 275, 276, 277, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 24, 23, 25, 22, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 60, 61, 118, 117, 115, 114, 113, 116, 86, 85, 65, 66, 64, 63, 62, 59, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 112, 111, 110, 108, 109, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 169, 102, 103, 104, 105, 106, 107, 174, 173, 172, 170, 171, 168, 167, 166, 165, 164, 163, 162, 161, 175, 160, 159, 158, 157, 119, 120, 121, 122, 123, 124, 125, 30, 126, 127, 128, 129, 154, 155, 153, 156, 152, 151, 177, 178, 150, 179, 180, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 253, 252, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 251, 250, 247, 244, 245, 246, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 242, 2], 'time': 160.07889218499997}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2592.0, 'Upper bound': 2592.0, 'Number of objectives': 1, 'Number of constraints': 843, 'Number of variables': 78400, 'Number of binary variables': 78400, 'Number of integer variables': 78400, 'Number of continuous variables': -78400, 'Number of nonzeros': 757032, 'Sense': 1, 'Number of solutions': 5}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 5.267775058746338, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 1500): ({'path_length': 2592.0, 'path': [1, 280, 3, 279, 278, 248, 249, 256, 255, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 140, 141, 142, 143, 144, 200, 199, 145, 146, 147, 148, 149, 139, 138, 137, 267, 268, 136, 135, 269, 270, 134, 133, 132, 131, 130, 21, 20, 19, 18, 17, 16, 271, 272, 273, 274, 275, 276, 277, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 24, 23, 25, 22, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 60, 61, 118, 117, 115, 114, 113, 116, 86, 85, 65, 66, 64, 63, 62, 59, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 112, 111, 110, 108, 109, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 169, 102, 103, 104, 105, 106, 107, 174, 173, 172, 170, 171, 168, 167, 166, 165, 164, 163, 162, 161, 175, 160, 159, 158, 157, 119, 120, 121, 122, 123, 124, 125, 30, 126, 127, 128, 129, 154, 155, 153, 156, 152, 151, 177, 178, 150, 179, 180, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 253, 252, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 251, 250, 247, 244, 245, 246, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 242, 2], 'time': 159.27499859299996}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2592.0, 'Upper bound': 2592.0, 'Number of objectives': 1, 'Number of constraints': 843, 'Number of variables': 78400, 'Number of binary variables': 78400, 'Number of integer variables': 78400, 'Number of continuous variables': -78400, 'Number of nonzeros': 757032, 'Sense': 1, 'Number of solutions': 5}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 5.174371004104614, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 600): ({'path_length': 2592.0, 'path': [1, 280, 3, 279, 278, 248, 249, 256, 255, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 140, 141, 142, 143, 144, 200, 199, 145, 146, 147, 148, 149, 139, 138, 137, 267, 268, 136, 135, 269, 270, 134, 133, 132, 131, 130, 21, 20, 19, 18, 17, 16, 271, 272, 273, 274, 275, 276, 277, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 24, 23, 25, 22, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 60, 61, 118, 117, 115, 114, 113, 116, 86, 85, 65, 66, 64, 63, 62, 59, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 112, 111, 110, 108, 109, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 169, 102, 103, 104, 105, 106, 107, 174, 173, 172, 170, 171, 168, 167, 166, 165, 164, 163, 162, 161, 175, 160, 159, 158, 157, 119, 120, 121, 122, 123, 124, 125, 30, 126, 127, 128, 129, 154, 155, 153, 156, 152, 151, 177, 178, 150, 179, 180, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 253, 252, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 251, 250, 247, 244, 245, 246, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 242, 2], 'time': 160.2225806250001}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2592.0, 'Upper bound': 2592.0, 'Number of objectives': 1, 'Number of constraints': 843, 'Number of variables': 78400, 'Number of binary variables': 78400, 'Number of integer variables': 78400, 'Number of continuous variables': -78400, 'Number of nonzeros': 757032, 'Sense': 1, 'Number of solutions': 5}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 5.539686918258667, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 1500): ({'path_length': 2592.0, 'path': [1, 280, 3, 279, 278, 248, 249, 256, 255, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 140, 141, 142, 143, 144, 200, 199, 145, 146, 147, 148, 149, 139, 138, 137, 267, 268, 136, 135, 269, 270, 134, 133, 132, 131, 130, 21, 20, 19, 18, 17, 16, 271, 272, 273, 274, 275, 276, 277, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 24, 23, 25, 22, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 60, 61, 118, 117, 115, 114, 113, 116, 86, 85, 65, 66, 64, 63, 62, 59, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 112, 111, 110, 108, 109, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 169, 102, 103, 104, 105, 106, 107, 174, 173, 172, 170, 171, 168, 167, 166, 165, 164, 163, 162, 161, 175, 160, 159, 158, 157, 119, 120, 121, 122, 123, 124, 125, 30, 126, 127, 128, 129, 154, 155, 153, 156, 152, 151, 177, 178, 150, 179, 180, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 253, 252, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 251, 250, 247, 244, 245, 246, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 242, 2], 'time': 163.0096155829999}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2592.0, 'Upper bound': 2592.0, 'Number of objectives': 1, 'Number of constraints': 843, 'Number of variables': 78400, 'Number of binary variables': 78400, 'Number of integer variables': 78400, 'Number of continuous variables': -78400, 'Number of nonzeros': 757032, 'Sense': 1, 'Number of solutions': 5}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 6.438841819763184, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'att48': {'optimal_solution': 10628, 'solutions': {('cplex', 60, 600): ({'path_length': 10628.0, 'path': [1, 8, 38, 31, 44, 18, 7, 28, 6, 37, 19, 27, 17, 43, 30, 36, 46, 33, 20, 47, 21, 32, 39, 48, 5, 42, 24, 10, 45, 35, 4, 26, 2, 29, 34, 41, 16, 22, 3, 23, 14, 25, 13, 11, 12, 15, 40, 9], 'time': 1.2365393350000886}, {'Problem': [{'Name': '', 'Lower bound': 10628.0, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 146, 'Number of variables': 2304, 'Number of binary variables': 2304, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.15636920928955078, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 60, 1500): ({'path_length': 10628.0, 'path': [1, 8, 38, 31, 44, 18, 7, 28, 6, 37, 19, 27, 17, 43, 30, 36, 46, 33, 20, 47, 21, 32, 39, 48, 5, 42, 24, 10, 45, 35, 4, 26, 2, 29, 34, 41, 16, 22, 3, 23, 14, 25, 13, 11, 12, 15, 40, 9], 'time': 1.4353351849999854}, {'Problem': [{'Name': '', 'Lower bound': 10628.0, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 146, 'Number of variables': 2304, 'Number of binary variables': 2304, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.16002202033996582, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 600): ({'path_length': 10628.0, 'path': [1, 8, 38, 31, 44, 18, 7, 28, 6, 37, 19, 27, 17, 43, 30, 36, 46, 33, 20, 47, 21, 32, 39, 48, 5, 42, 24, 10, 45, 35, 4, 26, 2, 29, 34, 41, 16, 22, 3, 23, 14, 25, 13, 11, 12, 15, 40, 9], 'time': 1.3937752829999681}, {'Problem': [{'Name': '', 'Lower bound': 10628.0, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 146, 'Number of variables': 2304, 'Number of binary variables': 2304, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.1592240333557129, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 1500): ({'path_length': 10628.0, 'path': [1, 8, 38, 31, 44, 18, 7, 28, 6, 37, 19, 27, 17, 43, 30, 36, 46, 33, 20, 47, 21, 32, 39, 48, 5, 42, 24, 10, 45, 35, 4, 26, 2, 29, 34, 41, 16, 22, 3, 23, 14, 25, 13, 11, 12, 15, 40, 9], 'time': 1.5093025020000823}, {'Problem': [{'Name': '', 'Lower bound': 10628.0, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 146, 'Number of variables': 2304, 'Number of binary variables': 2304, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.19347405433654785, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 600): ({'path_length': 10628.0, 'path': [1, 9, 40, 15, 12, 11, 13, 25, 14, 23, 3, 22, 16, 41, 34, 29, 2, 26, 4, 35, 45, 10, 24, 42, 5, 48, 39, 32, 21, 47, 20, 33, 46, 36, 30, 43, 17, 27, 19, 37, 6, 28, 7, 18, 44, 31, 38, 8], 'time': 1.754761948000123}, {'Problem': [{'Name': 'unknown', 'Lower bound': 10628.0, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 146, 'Number of variables': 2304, 'Number of binary variables': 2304, 'Number of integer variables': 2304, 'Number of continuous variables': -2304, 'Number of nonzeros': 8146, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.14585304260253906, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 1500): ({'path_length': 10628.0, 'path': [1, 9, 40, 15, 12, 11, 13, 25, 14, 23, 3, 22, 16, 41, 34, 29, 2, 26, 4, 35, 45, 10, 24, 42, 5, 48, 39, 32, 21, 47, 20, 33, 46, 36, 30, 43, 17, 27, 19, 37, 6, 28, 7, 18, 44, 31, 38, 8], 'time': 1.5408554459997958}, {'Problem': [{'Name': 'unknown', 'Lower bound': 10628.0, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 146, 'Number of variables': 2304, 'Number of binary variables': 2304, 'Number of integer variables': 2304, 'Number of continuous variables': -2304, 'Number of nonzeros': 8146, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.1181190013885498, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 600): ({'path_length': 10628.0, 'path': [1, 9, 40, 15, 12, 11, 13, 25, 14, 23, 3, 22, 16, 41, 34, 29, 2, 26, 4, 35, 45, 10, 24, 42, 5, 48, 39, 32, 21, 47, 20, 33, 46, 36, 30, 43, 17, 27, 19, 37, 6, 28, 7, 18, 44, 31, 38, 8], 'time': 1.4510286099998666}, {'Problem': [{'Name': 'unknown', 'Lower bound': 10628.0, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 146, 'Number of variables': 2304, 'Number of binary variables': 2304, 'Number of integer variables': 2304, 'Number of continuous variables': -2304, 'Number of nonzeros': 8146, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.10683393478393555, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 1500): ({'path_length': 10628.0, 'path': [1, 9, 40, 15, 12, 11, 13, 25, 14, 23, 3, 22, 16, 41, 34, 29, 2, 26, 4, 35, 45, 10, 24, 42, 5, 48, 39, 32, 21, 47, 20, 33, 46, 36, 30, 43, 17, 27, 19, 37, 6, 28, 7, 18, 44, 31, 38, 8], 'time': 1.2808813290000671}, {'Problem': [{'Name': 'unknown', 'Lower bound': 10628.0, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 146, 'Number of variables': 2304, 'Number of binary variables': 2304, 'Number of integer variables': 2304, 'Number of continuous variables': -2304, 'Number of nonzeros': 8146, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.10442686080932617, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'bayg29': {'optimal_solution': 1610, 'solutions': {('cplex', 60, 600): ({'path_length': 1610.0, 'path': [1, 28, 6, 12, 9, 26, 3, 29, 5, 21, 2, 20, 10, 4, 15, 18, 14, 17, 22, 11, 19, 25, 7, 23, 8, 27, 16, 13, 24], 'time': 0.37485478200005673}, {'Problem': [{'Name': '', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 79, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.039772987365722656, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 60, 1500): ({'path_length': 1610.0, 'path': [1, 28, 6, 12, 9, 26, 3, 29, 5, 21, 2, 20, 10, 4, 15, 18, 14, 17, 22, 11, 19, 25, 7, 23, 8, 27, 16, 13, 24], 'time': 0.3349061230001098}, {'Problem': [{'Name': '', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 79, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.04427909851074219, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 600): ({'path_length': 1610.0, 'path': [1, 28, 6, 12, 9, 26, 3, 29, 5, 21, 2, 20, 10, 4, 15, 18, 14, 17, 22, 11, 19, 25, 7, 23, 8, 27, 16, 13, 24], 'time': 0.3701767649999965}, {'Problem': [{'Name': '', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 79, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.07487010955810547, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 1500): ({'path_length': 1610.0, 'path': [1, 28, 6, 12, 9, 26, 3, 29, 5, 21, 2, 20, 10, 4, 15, 18, 14, 17, 22, 11, 19, 25, 7, 23, 8, 27, 16, 13, 24], 'time': 0.37819400300008965}, {'Problem': [{'Name': '', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 79, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.05285525321960449, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 600): ({'path_length': 1610.0, 'path': [1, 28, 6, 12, 9, 26, 3, 29, 5, 21, 2, 20, 10, 4, 15, 18, 14, 17, 22, 11, 19, 25, 7, 23, 8, 27, 16, 13, 24], 'time': 0.28490330199997516}, {'Problem': [{'Name': 'unknown', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 79, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 841, 'Number of continuous variables': -841, 'Number of nonzeros': 2364, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.021357059478759766, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 1500): ({'path_length': 1610.0, 'path': [1, 28, 6, 12, 9, 26, 3, 29, 5, 21, 2, 20, 10, 4, 15, 18, 14, 17, 22, 11, 19, 25, 7, 23, 8, 27, 16, 13, 24], 'time': 0.2823833919999288}, {'Problem': [{'Name': 'unknown', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 79, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 841, 'Number of continuous variables': -841, 'Number of nonzeros': 2364, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.01963496208190918, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 600): ({'path_length': 1610.0, 'path': [1, 28, 6, 12, 9, 26, 3, 29, 5, 21, 2, 20, 10, 4, 15, 18, 14, 17, 22, 11, 19, 25, 7, 23, 8, 27, 16, 13, 24], 'time': 0.28623049200018613}, {'Problem': [{'Name': 'unknown', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 79, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 841, 'Number of continuous variables': -841, 'Number of nonzeros': 2364, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.019403934478759766, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 1500): ({'path_length': 1610.0, 'path': [1, 28, 6, 12, 9, 26, 3, 29, 5, 21, 2, 20, 10, 4, 15, 18, 14, 17, 22, 11, 19, 25, 7, 23, 8, 27, 16, 13, 24], 'time': 0.26295554600005744}, {'Problem': [{'Name': 'unknown', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 79, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 841, 'Number of continuous variables': -841, 'Number of nonzeros': 2364, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.01921701431274414, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'bays29': {'optimal_solution': 2020, 'solutions': {('cplex', 60, 600): ({'path_length': 2020.0, 'path': [1, 21, 13, 16, 24, 8, 27, 23, 7, 25, 19, 11, 22, 14, 17, 18, 15, 4, 10, 20, 2, 3, 29, 26, 5, 9, 12, 6, 28], 'time': 0.4324427509998259}, {'Problem': [{'Name': '', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 83, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.05464482307434082, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 60, 1500): ({'path_length': 2020.0, 'path': [1, 21, 13, 16, 24, 8, 27, 23, 7, 25, 19, 11, 22, 14, 17, 18, 15, 4, 10, 20, 2, 3, 29, 26, 5, 9, 12, 6, 28], 'time': 0.47688012000003255}, {'Problem': [{'Name': '', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 83, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.07480096817016602, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 600): ({'path_length': 2020.0, 'path': [1, 21, 13, 16, 24, 8, 27, 23, 7, 25, 19, 11, 22, 14, 17, 18, 15, 4, 10, 20, 2, 3, 29, 26, 5, 9, 12, 6, 28], 'time': 0.521098314000028}, {'Problem': [{'Name': '', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 83, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.08907794952392578, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 1500): ({'path_length': 2020.0, 'path': [1, 21, 13, 16, 24, 8, 27, 23, 7, 25, 19, 11, 22, 14, 17, 18, 15, 4, 10, 20, 2, 3, 29, 26, 5, 9, 12, 6, 28], 'time': 0.5080287709999993}, {'Problem': [{'Name': '', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 83, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.05585289001464844, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 600): ({'path_length': 2020.0, 'path': [1, 28, 6, 12, 9, 5, 26, 29, 3, 2, 20, 10, 4, 15, 18, 17, 14, 22, 11, 19, 25, 7, 23, 27, 8, 24, 16, 13, 21], 'time': 0.503338087999964}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 83, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 841, 'Number of continuous variables': -841, 'Number of nonzeros': 2746, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.03795194625854492, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 1500): ({'path_length': 2020.0, 'path': [1, 28, 6, 12, 9, 5, 26, 29, 3, 2, 20, 10, 4, 15, 18, 17, 14, 22, 11, 19, 25, 7, 23, 27, 8, 24, 16, 13, 21], 'time': 0.47490218300004017}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 83, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 841, 'Number of continuous variables': -841, 'Number of nonzeros': 2746, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.036850929260253906, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 600): ({'path_length': 2020.0, 'path': [1, 28, 6, 12, 9, 5, 26, 29, 3, 2, 20, 10, 4, 15, 18, 17, 14, 22, 11, 19, 25, 7, 23, 27, 8, 24, 16, 13, 21], 'time': 0.5422492229999989}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 83, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 841, 'Number of continuous variables': -841, 'Number of nonzeros': 2746, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.03321099281311035, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 1500): ({'path_length': 2020.0, 'path': [1, 28, 6, 12, 9, 5, 26, 29, 3, 2, 20, 10, 4, 15, 18, 17, 14, 22, 11, 19, 25, 7, 23, 27, 8, 24, 16, 13, 21], 'time': 0.4712398879999}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 83, 'Number of variables': 841, 'Number of binary variables': 841, 'Number of integer variables': 841, 'Number of continuous variables': -841, 'Number of nonzeros': 2746, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.02652597427368164, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'berlin52': {'optimal_solution': 7542, 'solutions': {('cplex', 60, 600): ({'path_length': 7542.0, 'path': [1, 49, 32, 45, 19, 41, 8, 9, 10, 43, 33, 51, 11, 52, 14, 13, 47, 26, 27, 28, 12, 25, 4, 6, 15, 5, 24, 48, 38, 37, 40, 39, 36, 35, 34, 44, 46, 16, 29, 50, 20, 23, 30, 2, 7, 42, 21, 17, 3, 18, 31, 22], 'time': 0.5816464669999277}, {'Problem': [{'Name': '', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 136, 'Number of variables': 2704, 'Number of binary variables': 2704, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.03488588333129883, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 60, 1500): ({'path_length': 7542.0, 'path': [1, 49, 32, 45, 19, 41, 8, 9, 10, 43, 33, 51, 11, 52, 14, 13, 47, 26, 27, 28, 12, 25, 4, 6, 15, 5, 24, 48, 38, 37, 40, 39, 36, 35, 34, 44, 46, 16, 29, 50, 20, 23, 30, 2, 7, 42, 21, 17, 3, 18, 31, 22], 'time': 0.5568002370000613}, {'Problem': [{'Name': '', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 136, 'Number of variables': 2704, 'Number of binary variables': 2704, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.03413081169128418, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 600): ({'path_length': 7542.0, 'path': [1, 49, 32, 45, 19, 41, 8, 9, 10, 43, 33, 51, 11, 52, 14, 13, 47, 26, 27, 28, 12, 25, 4, 6, 15, 5, 24, 48, 38, 37, 40, 39, 36, 35, 34, 44, 46, 16, 29, 50, 20, 23, 30, 2, 7, 42, 21, 17, 3, 18, 31, 22], 'time': 0.5470715689998542}, {'Problem': [{'Name': '', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 136, 'Number of variables': 2704, 'Number of binary variables': 2704, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.03265094757080078, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 1500): ({'path_length': 7542.0, 'path': [1, 49, 32, 45, 19, 41, 8, 9, 10, 43, 33, 51, 11, 52, 14, 13, 47, 26, 27, 28, 12, 25, 4, 6, 15, 5, 24, 48, 38, 37, 40, 39, 36, 35, 34, 44, 46, 16, 29, 50, 20, 23, 30, 2, 7, 42, 21, 17, 3, 18, 31, 22], 'time': 0.5111459839999952}, {'Problem': [{'Name': '', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 136, 'Number of variables': 2704, 'Number of binary variables': 2704, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.031831979751586914, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 600): ({'path_length': 7542.0, 'path': [1, 22, 31, 18, 3, 17, 21, 42, 7, 2, 30, 23, 20, 50, 29, 16, 46, 44, 34, 35, 36, 39, 40, 37, 38, 48, 24, 5, 15, 6, 4, 25, 12, 28, 27, 26, 47, 13, 14, 52, 11, 51, 33, 43, 10, 9, 8, 41, 19, 45, 32, 49], 'time': 0.4818197549998331}, {'Problem': [{'Name': 'unknown', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 136, 'Number of variables': 2704, 'Number of binary variables': 2704, 'Number of integer variables': 2704, 'Number of continuous variables': -2704, 'Number of nonzeros': 5816, 'Sense': 1, 'Number of solutions': 2}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.014216899871826172, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 1500): ({'path_length': 7542.0, 'path': [1, 22, 31, 18, 3, 17, 21, 42, 7, 2, 30, 23, 20, 50, 29, 16, 46, 44, 34, 35, 36, 39, 40, 37, 38, 48, 24, 5, 15, 6, 4, 25, 12, 28, 27, 26, 47, 13, 14, 52, 11, 51, 33, 43, 10, 9, 8, 41, 19, 45, 32, 49], 'time': 0.4725520409999717}, {'Problem': [{'Name': 'unknown', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 136, 'Number of variables': 2704, 'Number of binary variables': 2704, 'Number of integer variables': 2704, 'Number of continuous variables': -2704, 'Number of nonzeros': 5816, 'Sense': 1, 'Number of solutions': 2}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.01407313346862793, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 600): ({'path_length': 7542.0, 'path': [1, 22, 31, 18, 3, 17, 21, 42, 7, 2, 30, 23, 20, 50, 29, 16, 46, 44, 34, 35, 36, 39, 40, 37, 38, 48, 24, 5, 15, 6, 4, 25, 12, 28, 27, 26, 47, 13, 14, 52, 11, 51, 33, 43, 10, 9, 8, 41, 19, 45, 32, 49], 'time': 0.485502581999981}, {'Problem': [{'Name': 'unknown', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 136, 'Number of variables': 2704, 'Number of binary variables': 2704, 'Number of integer variables': 2704, 'Number of continuous variables': -2704, 'Number of nonzeros': 5816, 'Sense': 1, 'Number of solutions': 2}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.013926029205322266, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 1500): ({'path_length': 7542.0, 'path': [1, 22, 31, 18, 3, 17, 21, 42, 7, 2, 30, 23, 20, 50, 29, 16, 46, 44, 34, 35, 36, 39, 40, 37, 38, 48, 24, 5, 15, 6, 4, 25, 12, 28, 27, 26, 47, 13, 14, 52, 11, 51, 33, 43, 10, 9, 8, 41, 19, 45, 32, 49], 'time': 0.4984423969999625}, {'Problem': [{'Name': 'unknown', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 136, 'Number of variables': 2704, 'Number of binary variables': 2704, 'Number of integer variables': 2704, 'Number of continuous variables': -2704, 'Number of nonzeros': 5816, 'Sense': 1, 'Number of solutions': 2}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.014175891876220703, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'brg180': {'optimal_solution': 1950, 'solutions': {('cplex', 60, 600): ({'path_length': 4500.0, 'path': [0, 1, 161, 160, 5, 4, 136, 137, 146, 147, 60, 61, 40, 41, 157, 156, 70, 71, 38, 39, 165, 164, 64, 65, 167, 166, 23, 22, 144, 145, 68, 69, 30, 31, 139, 138, 90, 91, 163, 162, 16, 17, 88, 89, 24, 25, 126, 127, 35, 34, 94, 95, 109, 108, 87, 86, 12, 13, 99, 98, 112, 113, 171, 170, 67, 66, 26, 27, 63, 62, 28, 29, 133, 132, 2, 3, 177, 176, 115, 114, 96, 97, 119, 118, 36, 37, 82, 83, 42, 43, 76, 77, 179, 178, 78, 79, 142, 143, 73, 72, 140, 141, 152, 153, 54, 55, 121, 120, 74, 75, 18, 19, 81, 80, 52, 53, 129, 128, 49, 48, 92, 93, 116, 117, 50, 51, 110, 111, 172, 173, 21, 20, 154, 155, 57, 56, 85, 84, 59, 58, 123, 122, 11, 10, 175, 174, 15, 14, 168, 169, 33, 32, 124, 125, 106, 107, 130, 131, 100, 101, 150, 151, 102, 103, 148, 149, 135, 134, 9, 8, 46, 47, 0, 1, 161, 160, 5, 4, 136, 137], 'time': 609.2175791909999}, {'Problem': [{'Name': '', 'Lower bound': 4500.0, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 1087, 'Number of variables': 32400, 'Number of binary variables': 32400, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 4.210340976715088, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 60, 1500): ({'path_length': 4500.0, 'path': [0, 115, 114, 44, 45, 157, 156, 38, 39, 107, 106, 118, 119, 93, 92, 23, 22, 105, 104, 148, 149, 12, 13, 91, 90, 136, 137, 24, 25, 121, 120, 34, 35, 96, 97, 32, 33, 69, 68, 154, 155, 53, 52, 131, 130, 82, 83, 36, 37, 135, 134, 151, 150, 1, 0, 115, 114, 44, 45, 157, 156, 38, 39, 107, 106, 118, 119, 93, 92, 23, 22, 105, 104, 148, 149, 12, 13, 91, 90, 136, 137, 24, 25, 121, 120, 34, 35, 96, 97, 32, 33, 69, 68, 154, 155, 53, 52, 131, 130, 82, 83, 36, 37, 135, 134, 151, 150, 1, 0, 115, 114, 44, 45, 157, 156, 38, 39, 107, 106, 118, 119, 93, 92, 23, 22, 105, 104, 148, 149, 12, 13, 91, 90, 136, 137, 24, 25, 121, 120, 34, 35, 96, 97, 32, 33, 69, 68, 154, 155, 53, 52, 131, 130, 82, 83, 36, 37, 135, 134, 151, 150, 1, 0, 115, 114, 44, 45, 157, 156, 38, 39, 107, 106, 118, 119, 93, 92, 23, 22, 105], 'time': 1508.769061864}, {'Problem': [{'Name': '', 'Lower bound': 4500.0, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 1432, 'Number of variables': 32400, 'Number of binary variables': 32400, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 6.665263891220093, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 600): ({'path_length': 4500.0, 'path': [0, 1, 138, 139, 94, 95, 25, 24, 133, 132, 91, 90, 34, 35, 136, 137, 0, 1, 138, 139, 94, 95, 25, 24, 133, 132, 91, 90, 34, 35, 136, 137, 0, 1, 138, 139, 94, 95, 25, 24, 133, 132, 91, 90, 34, 35, 136, 137, 0, 1, 138, 139, 94, 95, 25, 24, 133, 132, 91, 90, 34, 35, 136, 137, 0, 1, 138, 139, 94, 95, 25, 24, 133, 132, 91, 90, 34, 35, 136, 137, 0, 1, 138, 139, 94, 95, 25, 24, 133, 132, 91, 90, 34, 35, 136, 137, 0, 1, 138, 139, 94, 95, 25, 24, 133, 132, 91, 90, 34, 35, 136, 137, 0, 1, 138, 139, 94, 95, 25, 24, 133, 132, 91, 90, 34, 35, 136, 137, 0, 1, 138, 139, 94, 95, 25, 24, 133, 132, 91, 90, 34, 35, 136, 137, 0, 1, 138, 139, 94, 95, 25, 24, 133, 132, 91, 90, 34, 35, 136, 137, 0, 1, 138, 139, 94, 95, 25, 24, 133, 132, 91, 90, 34, 35, 136, 137, 0, 1, 138, 139], 'time': 606.54241693}, {'Problem': [{'Name': '', 'Lower bound': 4500.0, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 1036, 'Number of variables': 32400, 'Number of binary variables': 32400, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 4.181266784667969, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 1500): ({'path_length': 4500.0, 'path': [0, 1, 147, 146, 53, 52, 145, 144, 23, 22, 99, 98, 149, 148, 138, 139, 29, 28, 69, 68, 170, 171, 114, 115, 106, 107, 109, 108, 86, 87, 156, 157, 64, 65, 176, 177, 112, 113, 10, 11, 125, 124, 160, 161, 123, 122, 7, 6, 178, 179, 16, 17, 175, 174, 75, 74, 121, 120, 102, 103, 34, 35, 143, 142, 95, 94, 136, 137, 91, 90, 132, 133, 31, 30, 89, 88, 25, 24, 131, 130, 81, 80, 58, 59, 116, 117, 92, 93, 50, 51, 152, 153, 3, 2, 163, 162, 12, 13, 155, 154, 20, 21, 150, 151, 141, 140, 40, 41, 72, 73, 129, 128, 55, 54, 8, 9, 110, 111, 4, 5, 172, 173, 19, 18, 166, 167, 70, 71, 159, 158, 127, 126, 100, 101, 27, 26, 0, 1, 147, 146, 53, 52, 145, 144, 23, 22, 99, 98, 149, 148, 138, 139, 29, 28, 69, 68, 170, 171, 114, 115, 106, 107, 109, 108, 86, 87, 156, 157, 64, 65, 176, 177, 112, 113, 10, 11, 125, 124, 160, 161], 'time': 1505.6674715630002}, {'Problem': [{'Name': '', 'Lower bound': 4500.0, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 1517, 'Number of variables': 32400, 'Number of binary variables': 32400, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 6.364229917526245, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 600): ({'path_length': 4500.0, 'path': [0, 12, 13, 166, 167, 61, 60, 145, 144, 103, 102, 120, 121, 35, 34, 84, 85, 116, 117, 9, 8, 22, 23, 86, 87, 162, 163, 19, 18, 156, 157, 65, 64, 26, 27, 106, 107, 39, 38, 164, 165, 41, 40, 71, 70, 53, 52, 63, 62, 32, 33, 171, 170, 28, 29, 88, 89, 137, 136, 153, 152, 57, 56, 155, 154, 55, 54, 10, 11, 122, 123, 49, 48, 72, 73, 46, 47, 133, 132, 94, 95, 24, 25, 91, 90, 30, 31, 142, 143, 83, 82, 43, 42, 135, 134, 3, 2, 127, 126, 97, 96, 109, 108, 51, 50, 118, 119, 104, 105, 45, 44, 98, 99, 150, 151, 139, 138, 148, 149, 100, 101, 21, 20, 172, 173, 110, 111, 92, 93, 16, 17, 77, 76, 14, 15, 74, 75, 130, 131, 80, 81, 175, 174, 115, 114, 7, 6, 59, 58, 129, 128, 5, 4, 160, 161, 125, 124, 159, 158, 67, 66, 169, 168, 79, 78, 179, 178, 68, 69, 176, 177, 112, 113, 36, 37, 140, 141, 147, 146, 1], 'time': 383.530687726}, {'Problem': [{'Name': 'unknown', 'Lower bound': 4500.0, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 969, 'Number of variables': 32400, 'Number of binary variables': 32400, 'Number of integer variables': 32400, 'Number of continuous variables': -32400, 'Number of nonzeros': 1250184, 'Sense': 1, 'Number of solutions': 2}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 2.0405099391937256, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 1500): ({'path_length': 4500.0, 'path': [0, 12, 13, 166, 167, 61, 60, 145, 144, 103, 102, 120, 121, 35, 34, 84, 85, 116, 117, 9, 8, 22, 23, 86, 87, 162, 163, 19, 18, 156, 157, 65, 64, 26, 27, 106, 107, 39, 38, 164, 165, 41, 40, 71, 70, 53, 52, 63, 62, 32, 33, 171, 170, 28, 29, 88, 89, 137, 136, 153, 152, 57, 56, 155, 154, 55, 54, 10, 11, 122, 123, 49, 48, 72, 73, 46, 47, 133, 132, 94, 95, 24, 25, 91, 90, 30, 31, 142, 143, 83, 82, 43, 42, 135, 134, 3, 2, 127, 126, 97, 96, 109, 108, 51, 50, 118, 119, 104, 105, 45, 44, 98, 99, 150, 151, 139, 138, 148, 149, 100, 101, 21, 20, 172, 173, 110, 111, 92, 93, 16, 17, 77, 76, 14, 15, 74, 75, 130, 131, 80, 81, 175, 174, 115, 114, 7, 6, 59, 58, 129, 128, 5, 4, 160, 161, 125, 124, 159, 158, 67, 66, 169, 168, 79, 78, 179, 178, 68, 69, 176, 177, 112, 113, 36, 37, 140, 141, 147, 146, 1], 'time': 383.92787094100004}, {'Problem': [{'Name': 'unknown', 'Lower bound': 4500.0, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 969, 'Number of variables': 32400, 'Number of binary variables': 32400, 'Number of integer variables': 32400, 'Number of continuous variables': -32400, 'Number of nonzeros': 1250184, 'Sense': 1, 'Number of solutions': 2}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 2.0359959602355957, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 600): ({'path_length': 4500.0, 'path': [0, 12, 13, 166, 167, 61, 60, 145, 144, 103, 102, 120, 121, 35, 34, 84, 85, 116, 117, 9, 8, 22, 23, 86, 87, 162, 163, 19, 18, 156, 157, 65, 64, 26, 27, 106, 107, 39, 38, 164, 165, 41, 40, 71, 70, 53, 52, 63, 62, 32, 33, 171, 170, 28, 29, 88, 89, 137, 136, 153, 152, 57, 56, 155, 154, 55, 54, 10, 11, 122, 123, 49, 48, 72, 73, 46, 47, 133, 132, 94, 95, 24, 25, 91, 90, 30, 31, 142, 143, 83, 82, 43, 42, 135, 134, 3, 2, 127, 126, 97, 96, 109, 108, 51, 50, 118, 119, 104, 105, 45, 44, 98, 99, 150, 151, 139, 138, 148, 149, 100, 101, 21, 20, 172, 173, 110, 111, 92, 93, 16, 17, 77, 76, 14, 15, 74, 75, 130, 131, 80, 81, 175, 174, 115, 114, 7, 6, 59, 58, 129, 128, 5, 4, 160, 161, 125, 124, 159, 158, 67, 66, 169, 168, 79, 78, 179, 178, 68, 69, 176, 177, 112, 113, 36, 37, 140, 141, 147, 146, 1], 'time': 392.39655208600016}, {'Problem': [{'Name': 'unknown', 'Lower bound': 4500.0, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 969, 'Number of variables': 32400, 'Number of binary variables': 32400, 'Number of integer variables': 32400, 'Number of continuous variables': -32400, 'Number of nonzeros': 1250184, 'Sense': 1, 'Number of solutions': 2}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 2.1592350006103516, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 1500): ({'path_length': 4500.0, 'path': [0, 12, 13, 166, 167, 61, 60, 145, 144, 103, 102, 120, 121, 35, 34, 84, 85, 116, 117, 9, 8, 22, 23, 86, 87, 162, 163, 19, 18, 156, 157, 65, 64, 26, 27, 106, 107, 39, 38, 164, 165, 41, 40, 71, 70, 53, 52, 63, 62, 32, 33, 171, 170, 28, 29, 88, 89, 137, 136, 153, 152, 57, 56, 155, 154, 55, 54, 10, 11, 122, 123, 49, 48, 72, 73, 46, 47, 133, 132, 94, 95, 24, 25, 91, 90, 30, 31, 142, 143, 83, 82, 43, 42, 135, 134, 3, 2, 127, 126, 97, 96, 109, 108, 51, 50, 118, 119, 104, 105, 45, 44, 98, 99, 150, 151, 139, 138, 148, 149, 100, 101, 21, 20, 172, 173, 110, 111, 92, 93, 16, 17, 77, 76, 14, 15, 74, 75, 130, 131, 80, 81, 175, 174, 115, 114, 7, 6, 59, 58, 129, 128, 5, 4, 160, 161, 125, 124, 159, 158, 67, 66, 169, 168, 79, 78, 179, 178, 68, 69, 176, 177, 112, 113, 36, 37, 140, 141, 147, 146, 1], 'time': 389.943870479}, {'Problem': [{'Name': 'unknown', 'Lower bound': 4500.0, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 969, 'Number of variables': 32400, 'Number of binary variables': 32400, 'Number of integer variables': 32400, 'Number of continuous variables': -32400, 'Number of nonzeros': 1250184, 'Sense': 1, 'Number of solutions': 2}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 2.058809995651245, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'ch130': {'optimal_solution': 6110, 'solutions': {('cplex', 60, 600): ({'path_length': 6110.0, 'path': [1, 41, 39, 117, 112, 115, 28, 62, 105, 128, 16, 45, 5, 11, 76, 109, 61, 129, 124, 64, 69, 86, 88, 26, 7, 97, 70, 107, 127, 104, 43, 34, 17, 31, 27, 19, 100, 15, 29, 24, 116, 95, 79, 87, 12, 81, 103, 77, 94, 89, 110, 98, 68, 63, 48, 25, 113, 32, 36, 84, 119, 111, 123, 101, 82, 57, 9, 56, 65, 52, 75, 74, 99, 73, 92, 38, 106, 53, 120, 58, 49, 72, 91, 6, 102, 10, 14, 67, 13, 96, 122, 55, 60, 51, 42, 44, 93, 37, 22, 40, 47, 23, 33, 21, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 114, 108, 8, 18, 46, 80, 118, 20, 4, 35, 54, 2, 50, 130, 71], 'time': 11.07709791599973}, {'Problem': [{'Name': '', 'Lower bound': 6110.0, 'Upper bound': 6110.0, 'Number of objectives': 1, 'Number of constraints': 378, 'Number of variables': 16900, 'Number of binary variables': 16900, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 1.0153379440307617, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 60, 1500): ({'path_length': 6110.0, 'path': [1, 41, 39, 117, 112, 115, 28, 62, 105, 128, 16, 45, 5, 11, 76, 109, 61, 129, 124, 64, 69, 86, 88, 26, 7, 97, 70, 107, 127, 104, 43, 34, 17, 31, 27, 19, 100, 15, 29, 24, 116, 95, 79, 87, 12, 81, 103, 77, 94, 89, 110, 98, 68, 63, 48, 25, 113, 32, 36, 84, 119, 111, 123, 101, 82, 57, 9, 56, 65, 52, 75, 74, 99, 73, 92, 38, 106, 53, 120, 58, 49, 72, 91, 6, 102, 10, 14, 67, 13, 96, 122, 55, 60, 51, 42, 44, 93, 37, 22, 40, 47, 23, 33, 21, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 114, 108, 8, 18, 46, 80, 118, 20, 4, 35, 54, 2, 50, 130, 71], 'time': 11.124086701000124}, {'Problem': [{'Name': '', 'Lower bound': 6110.0, 'Upper bound': 6110.0, 'Number of objectives': 1, 'Number of constraints': 378, 'Number of variables': 16900, 'Number of binary variables': 16900, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 1.0055272579193115, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 600): ({'path_length': 6110.0, 'path': [1, 41, 39, 117, 112, 115, 28, 62, 105, 128, 16, 45, 5, 11, 76, 109, 61, 129, 124, 64, 69, 86, 88, 26, 7, 97, 70, 107, 127, 104, 43, 34, 17, 31, 27, 19, 100, 15, 29, 24, 116, 95, 79, 87, 12, 81, 103, 77, 94, 89, 110, 98, 68, 63, 48, 25, 113, 32, 36, 84, 119, 111, 123, 101, 82, 57, 9, 56, 65, 52, 75, 74, 99, 73, 92, 38, 106, 53, 120, 58, 49, 72, 91, 6, 102, 10, 14, 67, 13, 96, 122, 55, 60, 51, 42, 44, 93, 37, 22, 40, 47, 23, 33, 21, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 114, 108, 8, 18, 46, 80, 118, 20, 4, 35, 54, 2, 50, 130, 71], 'time': 11.31330629400054}, {'Problem': [{'Name': '', 'Lower bound': 6110.0, 'Upper bound': 6110.0, 'Number of objectives': 1, 'Number of constraints': 378, 'Number of variables': 16900, 'Number of binary variables': 16900, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 1.0283830165863037, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 1500): ({'path_length': 6110.0, 'path': [1, 41, 39, 117, 112, 115, 28, 62, 105, 128, 16, 45, 5, 11, 76, 109, 61, 129, 124, 64, 69, 86, 88, 26, 7, 97, 70, 107, 127, 104, 43, 34, 17, 31, 27, 19, 100, 15, 29, 24, 116, 95, 79, 87, 12, 81, 103, 77, 94, 89, 110, 98, 68, 63, 48, 25, 113, 32, 36, 84, 119, 111, 123, 101, 82, 57, 9, 56, 65, 52, 75, 74, 99, 73, 92, 38, 106, 53, 120, 58, 49, 72, 91, 6, 102, 10, 14, 67, 13, 96, 122, 55, 60, 51, 42, 44, 93, 37, 22, 40, 47, 23, 33, 21, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 114, 108, 8, 18, 46, 80, 118, 20, 4, 35, 54, 2, 50, 130, 71], 'time': 11.260942878000606}, {'Problem': [{'Name': '', 'Lower bound': 6110.0, 'Upper bound': 6110.0, 'Number of objectives': 1, 'Number of constraints': 378, 'Number of variables': 16900, 'Number of binary variables': 16900, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 1.0151968002319336, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 600): ({'path_length': 6110.0, 'path': [1, 41, 39, 117, 112, 115, 28, 62, 105, 128, 16, 45, 5, 11, 76, 109, 61, 129, 124, 64, 69, 86, 88, 26, 7, 97, 70, 107, 127, 104, 43, 34, 17, 31, 27, 19, 100, 15, 29, 24, 116, 95, 79, 87, 12, 81, 103, 77, 94, 89, 110, 98, 68, 63, 48, 25, 113, 32, 36, 84, 119, 111, 123, 101, 82, 57, 9, 56, 65, 52, 75, 74, 99, 73, 92, 38, 106, 53, 120, 58, 49, 72, 91, 6, 102, 10, 14, 67, 13, 96, 122, 55, 60, 51, 42, 44, 93, 37, 22, 47, 40, 23, 33, 21, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 114, 108, 8, 18, 46, 80, 118, 20, 4, 35, 54, 2, 50, 130, 71], 'time': 11.106797971999185}, {'Problem': [{'Name': 'unknown', 'Lower bound': 6110.0, 'Upper bound': 6110.0, 'Number of objectives': 1, 'Number of constraints': 378, 'Number of variables': 16900, 'Number of binary variables': 16900, 'Number of integer variables': 16900, 'Number of continuous variables': -16900, 'Number of nonzeros': 82368, 'Sense': 1, 'Number of solutions': 5}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 1.096235990524292, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 1500): ({'path_length': 6110.0, 'path': [1, 41, 39, 117, 112, 115, 28, 62, 105, 128, 16, 45, 5, 11, 76, 109, 61, 129, 124, 64, 69, 86, 88, 26, 7, 97, 70, 107, 127, 104, 43, 34, 17, 31, 27, 19, 100, 15, 29, 24, 116, 95, 79, 87, 12, 81, 103, 77, 94, 89, 110, 98, 68, 63, 48, 25, 113, 32, 36, 84, 119, 111, 123, 101, 82, 57, 9, 56, 65, 52, 75, 74, 99, 73, 92, 38, 106, 53, 120, 58, 49, 72, 91, 6, 102, 10, 14, 67, 13, 96, 122, 55, 60, 51, 42, 44, 93, 37, 22, 47, 40, 23, 33, 21, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 114, 108, 8, 18, 46, 80, 118, 20, 4, 35, 54, 2, 50, 130, 71], 'time': 10.974791218000064}, {'Problem': [{'Name': 'unknown', 'Lower bound': 6110.0, 'Upper bound': 6110.0, 'Number of objectives': 1, 'Number of constraints': 378, 'Number of variables': 16900, 'Number of binary variables': 16900, 'Number of integer variables': 16900, 'Number of continuous variables': -16900, 'Number of nonzeros': 82368, 'Sense': 1, 'Number of solutions': 5}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 1.109712839126587, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 600): ({'path_length': 6110.0, 'path': [1, 41, 39, 117, 112, 115, 28, 62, 105, 128, 16, 45, 5, 11, 76, 109, 61, 129, 124, 64, 69, 86, 88, 26, 7, 97, 70, 107, 127, 104, 43, 34, 17, 31, 27, 19, 100, 15, 29, 24, 116, 95, 79, 87, 12, 81, 103, 77, 94, 89, 110, 98, 68, 63, 48, 25, 113, 32, 36, 84, 119, 111, 123, 101, 82, 57, 9, 56, 65, 52, 75, 74, 99, 73, 92, 38, 106, 53, 120, 58, 49, 72, 91, 6, 102, 10, 14, 67, 13, 96, 122, 55, 60, 51, 42, 44, 93, 37, 22, 47, 40, 23, 33, 21, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 114, 108, 8, 18, 46, 80, 118, 20, 4, 35, 54, 2, 50, 130, 71], 'time': 10.922437008000088}, {'Problem': [{'Name': 'unknown', 'Lower bound': 6110.0, 'Upper bound': 6110.0, 'Number of objectives': 1, 'Number of constraints': 378, 'Number of variables': 16900, 'Number of binary variables': 16900, 'Number of integer variables': 16900, 'Number of continuous variables': -16900, 'Number of nonzeros': 82368, 'Sense': 1, 'Number of solutions': 5}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 1.0411689281463623, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 1500): ({'path_length': 6110.0, 'path': [1, 41, 39, 117, 112, 115, 28, 62, 105, 128, 16, 45, 5, 11, 76, 109, 61, 129, 124, 64, 69, 86, 88, 26, 7, 97, 70, 107, 127, 104, 43, 34, 17, 31, 27, 19, 100, 15, 29, 24, 116, 95, 79, 87, 12, 81, 103, 77, 94, 89, 110, 98, 68, 63, 48, 25, 113, 32, 36, 84, 119, 111, 123, 101, 82, 57, 9, 56, 65, 52, 75, 74, 99, 73, 92, 38, 106, 53, 120, 58, 49, 72, 91, 6, 102, 10, 14, 67, 13, 96, 122, 55, 60, 51, 42, 44, 93, 37, 22, 47, 40, 23, 33, 21, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 114, 108, 8, 18, 46, 80, 118, 20, 4, 35, 54, 2, 50, 130, 71], 'time': 10.897149149000143}, {'Problem': [{'Name': 'unknown', 'Lower bound': 6110.0, 'Upper bound': 6110.0, 'Number of objectives': 1, 'Number of constraints': 378, 'Number of variables': 16900, 'Number of binary variables': 16900, 'Number of integer variables': 16900, 'Number of continuous variables': -16900, 'Number of nonzeros': 82368, 'Sense': 1, 'Number of solutions': 5}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.8963370323181152, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'ch150': {'optimal_solution': 6528, 'solutions': {('cplex', 60, 600): ({'path_length': 6528.0, 'path': [1, 98, 103, 82, 95, 107, 5, 100, 143, 97, 146, 26, 75, 18, 142, 85, 65, 132, 137, 50, 55, 58, 141, 83, 56, 90, 46, 92, 54, 138, 134, 131, 32, 23, 38, 67, 43, 109, 51, 20, 25, 110, 81, 29, 86, 135, 70, 108, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 47, 139, 40, 53, 118, 24, 12, 116, 101, 41, 57, 39, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 129, 27, 31, 123, 74, 13, 106, 91, 119, 68, 128, 45, 71, 44, 64, 112, 136, 145, 144, 49, 147, 72, 80, 14, 122, 77, 133, 15, 78, 21, 150, 115, 4, 104, 22, 125, 149, 62, 3, 113, 10, 94, 88, 121, 79, 59, 16, 111, 105, 33, 126, 52, 93, 124, 35, 96, 89, 8, 7, 84, 30, 63, 48, 73, 76, 34, 87], 'time': 28.028322817000117}, {'Problem': [{'Name': '', 'Lower bound': 6528.000000000002, 'Upper bound': 6528.000000000002, 'Number of objectives': 1, 'Number of constraints': 440, 'Number of variables': 22500, 'Number of binary variables': 22500, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 2.5418500900268555, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 60, 1500): ({'path_length': 6528.0, 'path': [1, 98, 103, 82, 95, 107, 5, 100, 143, 97, 146, 26, 75, 18, 142, 85, 65, 132, 137, 50, 55, 58, 141, 83, 56, 90, 46, 92, 54, 138, 134, 131, 32, 23, 38, 67, 43, 109, 51, 20, 25, 110, 81, 29, 86, 135, 70, 108, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 47, 139, 40, 53, 118, 24, 12, 116, 101, 41, 57, 39, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 129, 27, 31, 123, 74, 13, 106, 91, 119, 68, 128, 45, 71, 44, 64, 112, 136, 145, 144, 49, 147, 72, 80, 14, 122, 77, 133, 15, 78, 21, 150, 115, 4, 104, 22, 125, 149, 62, 3, 113, 10, 94, 88, 121, 79, 59, 16, 111, 105, 33, 126, 52, 93, 124, 35, 96, 89, 8, 7, 84, 30, 63, 48, 73, 76, 34, 87], 'time': 28.275186388999828}, {'Problem': [{'Name': '', 'Lower bound': 6528.000000000002, 'Upper bound': 6528.000000000002, 'Number of objectives': 1, 'Number of constraints': 440, 'Number of variables': 22500, 'Number of binary variables': 22500, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 2.575843095779419, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 600): ({'path_length': 6528.0, 'path': [1, 98, 103, 82, 95, 107, 5, 100, 143, 97, 146, 26, 75, 18, 142, 85, 65, 132, 137, 50, 55, 58, 141, 83, 56, 90, 46, 92, 54, 138, 134, 131, 32, 23, 38, 67, 43, 109, 51, 20, 25, 110, 81, 29, 86, 135, 70, 108, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 47, 139, 40, 53, 118, 24, 12, 116, 101, 41, 57, 39, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 129, 27, 31, 123, 74, 13, 106, 91, 119, 68, 128, 45, 71, 44, 64, 112, 136, 145, 144, 49, 147, 72, 80, 14, 122, 77, 133, 15, 78, 21, 150, 115, 4, 104, 22, 125, 149, 62, 3, 113, 10, 94, 88, 121, 79, 59, 16, 111, 105, 33, 126, 52, 93, 124, 35, 96, 89, 8, 7, 84, 30, 63, 48, 73, 76, 34, 87], 'time': 28.568623547000243}, {'Problem': [{'Name': '', 'Lower bound': 6528.000000000002, 'Upper bound': 6528.000000000002, 'Number of objectives': 1, 'Number of constraints': 440, 'Number of variables': 22500, 'Number of binary variables': 22500, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 2.8904738426208496, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 1500): ({'path_length': 6528.0, 'path': [1, 98, 103, 82, 95, 107, 5, 100, 143, 97, 146, 26, 75, 18, 142, 85, 65, 132, 137, 50, 55, 58, 141, 83, 56, 90, 46, 92, 54, 138, 134, 131, 32, 23, 38, 67, 43, 109, 51, 20, 25, 110, 81, 29, 86, 135, 70, 108, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 47, 139, 40, 53, 118, 24, 12, 116, 101, 41, 57, 39, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 129, 27, 31, 123, 74, 13, 106, 91, 119, 68, 128, 45, 71, 44, 64, 112, 136, 145, 144, 49, 147, 72, 80, 14, 122, 77, 133, 15, 78, 21, 150, 115, 4, 104, 22, 125, 149, 62, 3, 113, 10, 94, 88, 121, 79, 59, 16, 111, 105, 33, 126, 52, 93, 124, 35, 96, 89, 8, 7, 84, 30, 63, 48, 73, 76, 34, 87], 'time': 28.446574210000108}, {'Problem': [{'Name': '', 'Lower bound': 6528.000000000002, 'Upper bound': 6528.000000000002, 'Number of objectives': 1, 'Number of constraints': 440, 'Number of variables': 22500, 'Number of binary variables': 22500, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 2.6372931003570557, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 600): ({'path_length': 6528.0, 'path': [1, 98, 103, 82, 95, 107, 5, 100, 143, 97, 146, 26, 75, 18, 142, 85, 65, 132, 137, 50, 55, 58, 141, 83, 56, 90, 46, 92, 54, 138, 134, 131, 32, 23, 38, 67, 43, 109, 51, 20, 25, 110, 81, 29, 86, 135, 70, 108, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 47, 139, 40, 53, 118, 24, 12, 116, 101, 41, 57, 39, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 129, 27, 31, 123, 74, 13, 106, 91, 119, 68, 128, 45, 71, 44, 64, 112, 136, 145, 144, 147, 49, 72, 80, 14, 122, 77, 133, 15, 78, 21, 150, 115, 4, 104, 22, 125, 149, 62, 3, 113, 10, 94, 88, 121, 79, 59, 16, 111, 105, 33, 126, 52, 93, 124, 35, 96, 89, 8, 7, 84, 30, 63, 48, 73, 76, 34, 87], 'time': 25.275379265999618}, {'Problem': [{'Name': 'unknown', 'Lower bound': 6528.0, 'Upper bound': 6528.0, 'Number of objectives': 1, 'Number of constraints': 440, 'Number of variables': 22500, 'Number of binary variables': 22500, 'Number of integer variables': 22500, 'Number of continuous variables': -22500, 'Number of nonzeros': 114394, 'Sense': 1, 'Number of solutions': 3}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 1.7608051300048828, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 1500): ({'path_length': 6528.0, 'path': [1, 98, 103, 82, 95, 107, 5, 100, 143, 97, 146, 26, 75, 18, 142, 85, 65, 132, 137, 50, 55, 58, 141, 83, 56, 90, 46, 92, 54, 138, 134, 131, 32, 23, 38, 67, 43, 109, 51, 20, 25, 110, 81, 29, 86, 135, 70, 108, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 47, 139, 40, 53, 118, 24, 12, 116, 101, 41, 57, 39, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 129, 27, 31, 123, 74, 13, 106, 91, 119, 68, 128, 45, 71, 44, 64, 112, 136, 145, 144, 147, 49, 72, 80, 14, 122, 77, 133, 15, 78, 21, 150, 115, 4, 104, 22, 125, 149, 62, 3, 113, 10, 94, 88, 121, 79, 59, 16, 111, 105, 33, 126, 52, 93, 124, 35, 96, 89, 8, 7, 84, 30, 63, 48, 73, 76, 34, 87], 'time': 24.887049040999955}, {'Problem': [{'Name': 'unknown', 'Lower bound': 6528.0, 'Upper bound': 6528.0, 'Number of objectives': 1, 'Number of constraints': 440, 'Number of variables': 22500, 'Number of binary variables': 22500, 'Number of integer variables': 22500, 'Number of continuous variables': -22500, 'Number of nonzeros': 114394, 'Sense': 1, 'Number of solutions': 3}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 1.7120521068572998, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 600): ({'path_length': 6528.0, 'path': [1, 98, 103, 82, 95, 107, 5, 100, 143, 97, 146, 26, 75, 18, 142, 85, 65, 132, 137, 50, 55, 58, 141, 83, 56, 90, 46, 92, 54, 138, 134, 131, 32, 23, 38, 67, 43, 109, 51, 20, 25, 110, 81, 29, 86, 135, 70, 108, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 47, 139, 40, 53, 118, 24, 12, 116, 101, 41, 57, 39, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 129, 27, 31, 123, 74, 13, 106, 91, 119, 68, 128, 45, 71, 44, 64, 112, 136, 145, 144, 147, 49, 72, 80, 14, 122, 77, 133, 15, 78, 21, 150, 115, 4, 104, 22, 125, 149, 62, 3, 113, 10, 94, 88, 121, 79, 59, 16, 111, 105, 33, 126, 52, 93, 124, 35, 96, 89, 8, 7, 84, 30, 63, 48, 73, 76, 34, 87], 'time': 25.40549057300086}, {'Problem': [{'Name': 'unknown', 'Lower bound': 6528.0, 'Upper bound': 6528.0, 'Number of objectives': 1, 'Number of constraints': 440, 'Number of variables': 22500, 'Number of binary variables': 22500, 'Number of integer variables': 22500, 'Number of continuous variables': -22500, 'Number of nonzeros': 114394, 'Sense': 1, 'Number of solutions': 3}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 2.0560669898986816, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 1500): ({'path_length': 6528.0, 'path': [1, 98, 103, 82, 95, 107, 5, 100, 143, 97, 146, 26, 75, 18, 142, 85, 65, 132, 137, 50, 55, 58, 141, 83, 56, 90, 46, 92, 54, 138, 134, 131, 32, 23, 38, 67, 43, 109, 51, 20, 25, 110, 81, 29, 86, 135, 70, 108, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 47, 139, 40, 53, 118, 24, 12, 116, 101, 41, 57, 39, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 129, 27, 31, 123, 74, 13, 106, 91, 119, 68, 128, 45, 71, 44, 64, 112, 136, 145, 144, 147, 49, 72, 80, 14, 122, 77, 133, 15, 78, 21, 150, 115, 4, 104, 22, 125, 149, 62, 3, 113, 10, 94, 88, 121, 79, 59, 16, 111, 105, 33, 126, 52, 93, 124, 35, 96, 89, 8, 7, 84, 30, 63, 48, 73, 76, 34, 87], 'time': 24.927633555000284}, {'Problem': [{'Name': 'unknown', 'Lower bound': 6528.0, 'Upper bound': 6528.0, 'Number of objectives': 1, 'Number of constraints': 440, 'Number of variables': 22500, 'Number of binary variables': 22500, 'Number of integer variables': 22500, 'Number of continuous variables': -22500, 'Number of nonzeros': 114394, 'Sense': 1, 'Number of solutions': 3}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 1.6924409866333008, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'eil101': {'optimal_solution': 629, 'solutions': {('cplex', 60, 600): ({'path_length': 629.0, 'path': [1, 50, 76, 77, 3, 79, 33, 51, 9, 81, 78, 34, 35, 71, 65, 66, 20, 30, 70, 31, 88, 7, 82, 48, 19, 11, 62, 10, 32, 90, 63, 64, 49, 36, 47, 46, 8, 45, 17, 84, 5, 60, 83, 18, 52, 89, 6, 96, 99, 59, 92, 93, 98, 37, 100, 91, 85, 61, 16, 86, 44, 38, 14, 42, 43, 15, 57, 2, 87, 97, 95, 94, 13, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 67, 39, 25, 55, 4, 54, 24, 29, 68, 80, 12, 26, 28, 53, 101, 27, 69], 'time': 5.295439849000104}, {'Problem': [{'Name': '', 'Lower bound': 629.0, 'Upper bound': 629.0, 'Number of objectives': 1, 'Number of constraints': 273, 'Number of variables': 10201, 'Number of binary variables': 10201, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.5778157711029053, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 60, 1500): ({'path_length': 629.0, 'path': [1, 50, 76, 77, 3, 79, 33, 51, 9, 81, 78, 34, 35, 71, 65, 66, 20, 30, 70, 31, 88, 7, 82, 48, 19, 11, 62, 10, 32, 90, 63, 64, 49, 36, 47, 46, 8, 45, 17, 84, 5, 60, 83, 18, 52, 89, 6, 96, 99, 59, 92, 93, 98, 37, 100, 91, 85, 61, 16, 86, 44, 38, 14, 42, 43, 15, 57, 2, 87, 97, 95, 94, 13, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 67, 39, 25, 55, 4, 54, 24, 29, 68, 80, 12, 26, 28, 53, 101, 27, 69], 'time': 4.756142360999547}, {'Problem': [{'Name': '', 'Lower bound': 629.0, 'Upper bound': 629.0, 'Number of objectives': 1, 'Number of constraints': 273, 'Number of variables': 10201, 'Number of binary variables': 10201, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.5235142707824707, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 600): ({'path_length': 629.0, 'path': [1, 50, 76, 77, 3, 79, 33, 51, 9, 81, 78, 34, 35, 71, 65, 66, 20, 30, 70, 31, 88, 7, 82, 48, 19, 11, 62, 10, 32, 90, 63, 64, 49, 36, 47, 46, 8, 45, 17, 84, 5, 60, 83, 18, 52, 89, 6, 96, 99, 59, 92, 93, 98, 37, 100, 91, 85, 61, 16, 86, 44, 38, 14, 42, 43, 15, 57, 2, 87, 97, 95, 94, 13, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 67, 39, 25, 55, 4, 54, 24, 29, 68, 80, 12, 26, 28, 53, 101, 27, 69], 'time': 5.115941142999873}, {'Problem': [{'Name': '', 'Lower bound': 629.0, 'Upper bound': 629.0, 'Number of objectives': 1, 'Number of constraints': 273, 'Number of variables': 10201, 'Number of binary variables': 10201, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.6089017391204834, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 1500): ({'path_length': 629.0, 'path': [1, 50, 76, 77, 3, 79, 33, 51, 9, 81, 78, 34, 35, 71, 65, 66, 20, 30, 70, 31, 88, 7, 82, 48, 19, 11, 62, 10, 32, 90, 63, 64, 49, 36, 47, 46, 8, 45, 17, 84, 5, 60, 83, 18, 52, 89, 6, 96, 99, 59, 92, 93, 98, 37, 100, 91, 85, 61, 16, 86, 44, 38, 14, 42, 43, 15, 57, 2, 87, 97, 95, 94, 13, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 67, 39, 25, 55, 4, 54, 24, 29, 68, 80, 12, 26, 28, 53, 101, 27, 69], 'time': 4.805105110999648}, {'Problem': [{'Name': '', 'Lower bound': 629.0, 'Upper bound': 629.0, 'Number of objectives': 1, 'Number of constraints': 273, 'Number of variables': 10201, 'Number of binary variables': 10201, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.5185799598693848, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 600): ({'path_length': 629.0, 'path': [1, 50, 76, 77, 3, 79, 78, 34, 81, 33, 51, 9, 35, 65, 71, 66, 20, 30, 70, 31, 88, 7, 82, 48, 19, 11, 62, 10, 32, 90, 63, 64, 49, 36, 47, 46, 8, 45, 17, 84, 5, 60, 83, 18, 52, 89, 6, 96, 99, 93, 59, 92, 37, 98, 100, 91, 85, 61, 16, 86, 38, 44, 14, 42, 43, 15, 57, 2, 87, 97, 95, 94, 13, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 67, 39, 25, 55, 4, 54, 24, 29, 68, 80, 12, 26, 28, 53, 101, 27, 69], 'time': 5.964825652999934}, {'Problem': [{'Name': 'unknown', 'Lower bound': 629.0, 'Upper bound': 629.0, 'Number of objectives': 1, 'Number of constraints': 269, 'Number of variables': 10201, 'Number of binary variables': 10201, 'Number of integer variables': 10201, 'Number of continuous variables': -10201, 'Number of nonzeros': 51518, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.41483497619628906, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 1500): ({'path_length': 629.0, 'path': [1, 50, 76, 77, 3, 79, 78, 34, 81, 33, 51, 9, 35, 65, 71, 66, 20, 30, 70, 31, 88, 7, 82, 48, 19, 11, 62, 10, 32, 90, 63, 64, 49, 36, 47, 46, 8, 45, 17, 84, 5, 60, 83, 18, 52, 89, 6, 96, 99, 93, 59, 92, 37, 98, 100, 91, 85, 61, 16, 86, 38, 44, 14, 42, 43, 15, 57, 2, 87, 97, 95, 94, 13, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 67, 39, 25, 55, 4, 54, 24, 29, 68, 80, 12, 26, 28, 53, 101, 27, 69], 'time': 5.492714752000211}, {'Problem': [{'Name': 'unknown', 'Lower bound': 629.0, 'Upper bound': 629.0, 'Number of objectives': 1, 'Number of constraints': 269, 'Number of variables': 10201, 'Number of binary variables': 10201, 'Number of integer variables': 10201, 'Number of continuous variables': -10201, 'Number of nonzeros': 51518, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.38652896881103516, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 600): ({'path_length': 629.0, 'path': [1, 50, 76, 77, 3, 79, 78, 34, 81, 33, 51, 9, 35, 65, 71, 66, 20, 30, 70, 31, 88, 7, 82, 48, 19, 11, 62, 10, 32, 90, 63, 64, 49, 36, 47, 46, 8, 45, 17, 84, 5, 60, 83, 18, 52, 89, 6, 96, 99, 93, 59, 92, 37, 98, 100, 91, 85, 61, 16, 86, 38, 44, 14, 42, 43, 15, 57, 2, 87, 97, 95, 94, 13, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 67, 39, 25, 55, 4, 54, 24, 29, 68, 80, 12, 26, 28, 53, 101, 27, 69], 'time': 5.938883939999869}, {'Problem': [{'Name': 'unknown', 'Lower bound': 629.0, 'Upper bound': 629.0, 'Number of objectives': 1, 'Number of constraints': 269, 'Number of variables': 10201, 'Number of binary variables': 10201, 'Number of integer variables': 10201, 'Number of continuous variables': -10201, 'Number of nonzeros': 51518, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.39131784439086914, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 1500): ({'path_length': 629.0, 'path': [1, 50, 76, 77, 3, 79, 78, 34, 81, 33, 51, 9, 35, 65, 71, 66, 20, 30, 70, 31, 88, 7, 82, 48, 19, 11, 62, 10, 32, 90, 63, 64, 49, 36, 47, 46, 8, 45, 17, 84, 5, 60, 83, 18, 52, 89, 6, 96, 99, 93, 59, 92, 37, 98, 100, 91, 85, 61, 16, 86, 38, 44, 14, 42, 43, 15, 57, 2, 87, 97, 95, 94, 13, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 67, 39, 25, 55, 4, 54, 24, 29, 68, 80, 12, 26, 28, 53, 101, 27, 69], 'time': 5.55608177799968}, {'Problem': [{'Name': 'unknown', 'Lower bound': 629.0, 'Upper bound': 629.0, 'Number of objectives': 1, 'Number of constraints': 269, 'Number of variables': 10201, 'Number of binary variables': 10201, 'Number of integer variables': 10201, 'Number of continuous variables': -10201, 'Number of nonzeros': 51518, 'Sense': 1, 'Number of solutions': 4}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.39290714263916016, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'eil51': {'optimal_solution': 426, 'solutions': {('cplex', 60, 600): ({'path_length': 426.0, 'path': [1, 32, 11, 38, 5, 37, 17, 4, 18, 47, 12, 46, 51, 27, 6, 48, 23, 7, 43, 24, 14, 25, 13, 41, 19, 40, 42, 44, 15, 45, 33, 39, 10, 49, 9, 30, 34, 50, 16, 21, 29, 2, 20, 35, 36, 3, 28, 31, 26, 8, 22], 'time': 1.3392206270000315}, {'Problem': [{'Name': '', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 141, 'Number of variables': 2601, 'Number of binary variables': 2601, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.11595702171325684, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 60, 1500): ({'path_length': 426.0, 'path': [1, 32, 11, 38, 5, 37, 17, 4, 18, 47, 12, 46, 51, 27, 6, 48, 23, 7, 43, 24, 14, 25, 13, 41, 19, 40, 42, 44, 15, 45, 33, 39, 10, 49, 9, 30, 34, 50, 16, 21, 29, 2, 20, 35, 36, 3, 28, 31, 26, 8, 22], 'time': 1.3134671349998825}, {'Problem': [{'Name': '', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 141, 'Number of variables': 2601, 'Number of binary variables': 2601, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.11165904998779297, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 600): ({'path_length': 426.0, 'path': [1, 32, 11, 38, 5, 37, 17, 4, 18, 47, 12, 46, 51, 27, 6, 48, 23, 7, 43, 24, 14, 25, 13, 41, 19, 40, 42, 44, 15, 45, 33, 39, 10, 49, 9, 30, 34, 50, 16, 21, 29, 2, 20, 35, 36, 3, 28, 31, 26, 8, 22], 'time': 1.2514367989997481}, {'Problem': [{'Name': '', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 141, 'Number of variables': 2601, 'Number of binary variables': 2601, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.10666108131408691, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 300, 1500): ({'path_length': 426.0, 'path': [1, 32, 11, 38, 5, 37, 17, 4, 18, 47, 12, 46, 51, 27, 6, 48, 23, 7, 43, 24, 14, 25, 13, 41, 19, 40, 42, 44, 15, 45, 33, 39, 10, 49, 9, 30, 34, 50, 16, 21, 29, 2, 20, 35, 36, 3, 28, 31, 26, 8, 22], 'time': 1.1426085299999613}, {'Problem': [{'Name': '', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 141, 'Number of variables': 2601, 'Number of binary variables': 2601, 'Number of integer variables': 0, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.10335803031921387, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 600): ({'path_length': 426.0, 'path': [1, 22, 8, 26, 31, 28, 3, 36, 35, 20, 2, 29, 21, 16, 50, 34, 30, 9, 49, 10, 39, 33, 45, 15, 44, 42, 40, 19, 41, 13, 25, 14, 24, 43, 7, 23, 48, 6, 27, 51, 46, 12, 47, 18, 4, 17, 37, 5, 38, 11, 32], 'time': 0.9579049829999349}, {'Problem': [{'Name': 'unknown', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 137, 'Number of variables': 2601, 'Number of binary variables': 2601, 'Number of integer variables': 2601, 'Number of continuous variables': -2601, 'Number of nonzeros': 10152, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.13279199600219727, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 60, 1500): ({'path_length': 426.0, 'path': [1, 22, 8, 26, 31, 28, 3, 36, 35, 20, 2, 29, 21, 16, 50, 34, 30, 9, 49, 10, 39, 33, 45, 15, 44, 42, 40, 19, 41, 13, 25, 14, 24, 43, 7, 23, 48, 6, 27, 51, 46, 12, 47, 18, 4, 17, 37, 5, 38, 11, 32], 'time': 0.9291774370003623}, {'Problem': [{'Name': 'unknown', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 137, 'Number of variables': 2601, 'Number of binary variables': 2601, 'Number of integer variables': 2601, 'Number of continuous variables': -2601, 'Number of nonzeros': 10152, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.12679696083068848, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 600): ({'path_length': 426.0, 'path': [1, 22, 8, 26, 31, 28, 3, 36, 35, 20, 2, 29, 21, 16, 50, 34, 30, 9, 49, 10, 39, 33, 45, 15, 44, 42, 40, 19, 41, 13, 25, 14, 24, 43, 7, 23, 48, 6, 27, 51, 46, 12, 47, 18, 4, 17, 37, 5, 38, 11, 32], 'time': 0.9127140299997336}, {'Problem': [{'Name': 'unknown', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 137, 'Number of variables': 2601, 'Number of binary variables': 2601, 'Number of integer variables': 2601, 'Number of continuous variables': -2601, 'Number of nonzeros': 10152, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.13272500038146973, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 300, 1500): ({'path_length': 426.0, 'path': [1, 22, 8, 26, 31, 28, 3, 36, 35, 20, 2, 29, 21, 16, 50, 34, 30, 9, 49, 10, 39, 33, 45, 15, 44, 42, 40, 19, 41, 13, 25, 14, 24, 43, 7, 23, 48, 6, 27, 51, 46, 12, 47, 18, 4, 17, 37, 5, 38, 11, 32], 'time': 0.9388960999995106}, {'Problem': [{'Name': 'unknown', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 137, 'Number of variables': 2601, 'Number of binary variables': 2601, 'Number of integer variables': 2601, 'Number of continuous variables': -2601, 'Number of nonzeros': 10152, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.12670087814331055, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}}, 'mtz': {'a280': {'optimal_solution': 2579, 'solutions': {('cplex', 600): ({'path_length': 13068.0, 'path': [1, 2, 185, 97, 96, 92, 99, 100, 101, 169, 102, 215, 214, 198, 201, 130, 21, 128, 247, 245, 240, 228, 229, 230, 251, 8, 78, 65, 64, 63, 48, 177, 151, 111, 264, 265, 266, 140, 141, 148, 147, 142, 62, 118, 117, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 222, 223, 225, 224, 243, 244, 20, 87, 84, 85, 86, 116, 115, 114, 113, 220, 10, 11, 12, 13, 15, 104, 103, 127, 126, 29, 28, 145, 144, 143, 146, 66, 67, 209, 208, 253, 252, 255, 254, 257, 256, 258, 259, 260, 54, 53, 280, 235, 227, 226, 181, 182, 166, 167, 168, 172, 170, 187, 188, 189, 190, 239, 238, 237, 236, 233, 234, 179, 180, 176, 161, 162, 163, 91, 90, 89, 93, 98, 50, 49, 52, 51, 108, 109, 6, 45, 246, 231, 232, 278, 279, 3, 4, 277, 5, 165, 164, 68, 69, 70, 183, 184, 56, 121, 122, 123, 124, 221, 110, 112, 241, 242, 22, 25, 23, 24, 14, 55, 46, 47, 200, 199, 31, 61, 60, 43, 35, 36, 37, 38, 39, 40, 41, 42, 26, 27, 275, 276, 219, 218, 106, 107, 174, 173, 171, 248, 249, 250, 138, 137, 267, 268, 136, 7, 9, 94, 95, 120, 119, 157, 158, 159, 160, 175, 71, 72, 73, 269, 135, 134, 270, 194, 195, 196, 197, 193, 192, 191, 263, 262, 261, 131, 132, 133, 19, 18, 17, 16, 271, 272, 273, 139, 149, 150, 178, 216, 125, 30, 79, 80, 217, 129, 154, 155, 153, 156, 152, 88, 83, 82, 81, 186, 74, 75, 77, 76, 44, 59, 58, 57, 274, 32, 33, 34, 105], 'time': 609.7987995149997}, {'Problem': [{'Name': '', 'Lower bound': 2565.4999999999964, 'Upper bound': 13068.0, 'Number of objectives': 1, 'Number of constraints': 78680, 'Number of variables': 78680, 'Number of binary variables': 78400, 'Number of integer variables': 280, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'aborted', 'Wallclock time': 600.5782179832458, 'Termination condition': 'maxTimeLimit'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 1500): ({'path_length': 7008.0, 'path': [1, 2, 185, 97, 96, 95, 120, 119, 157, 125, 30, 31, 32, 33, 34, 19, 131, 132, 133, 18, 17, 16, 271, 272, 273, 139, 149, 150, 178, 177, 176, 179, 180, 181, 182, 183, 184, 158, 159, 160, 175, 151, 152, 156, 153, 154, 155, 121, 122, 123, 124, 221, 140, 141, 148, 147, 146, 145, 199, 222, 223, 224, 225, 226, 227, 215, 216, 217, 129, 127, 126, 29, 28, 27, 26, 22, 25, 23, 24, 130, 21, 128, 134, 270, 269, 268, 136, 135, 264, 265, 266, 138, 137, 267, 248, 249, 250, 228, 229, 230, 251, 8, 9, 94, 93, 98, 50, 49, 52, 51, 35, 36, 37, 38, 39, 40, 41, 42, 43, 60, 61, 118, 62, 63, 64, 65, 66, 67, 209, 210, 211, 212, 213, 214, 198, 197, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 253, 252, 255, 254, 257, 256, 258, 259, 260, 54, 53, 48, 56, 57, 58, 59, 44, 45, 246, 231, 14, 55, 46, 47, 200, 144, 143, 142, 263, 262, 261, 10, 11, 12, 13, 15, 274, 275, 276, 277, 278, 3, 279, 280, 7, 6, 4, 5, 165, 166, 167, 168, 172, 169, 171, 170, 187, 186, 192, 191, 193, 188, 189, 190, 239, 238, 237, 236, 235, 234, 233, 232, 247, 245, 240, 241, 242, 243, 244, 20, 87, 84, 85, 86, 116, 117, 115, 114, 113, 220, 219, 218, 106, 107, 173, 174, 161, 162, 163, 164, 68, 69, 70, 71, 72, 73, 74, 76, 75, 77, 78, 79, 80, 81, 82, 83, 88, 112, 111, 110, 108, 109, 89, 90, 91, 92, 99, 100, 101, 102, 103, 104, 105], 'time': 1510.2652466099998}, {'Problem': [{'Name': '', 'Lower bound': 2571.3333333333294, 'Upper bound': 7008.0, 'Number of objectives': 1, 'Number of constraints': 78680, 'Number of variables': 78680, 'Number of binary variables': 78400, 'Number of integer variables': 280, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'aborted', 'Wallclock time': 1500.6632950305939, 'Termination condition': 'maxTimeLimit'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 600): ({'path_length': 3065.0, 'path': [1, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 24, 23, 25, 22, 26, 27, 28, 29, 126, 127, 128, 21, 20, 131, 130, 129, 154, 155, 153, 156, 152, 151, 177, 178, 150, 179, 180, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234, 235, 236, 237, 238, 239, 246, 245, 247, 244, 243, 242, 241, 240, 231, 232, 233, 228, 229, 230, 251, 250, 249, 248, 278, 279, 3, 208, 209, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 139, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 266, 137, 138, 267, 135, 136, 268, 269, 270, 134, 132, 19, 18, 17, 133, 272, 271, 16, 15, 274, 273, 4, 277, 276, 275, 280, 2, 1, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 24, 23, 25, 22, 26, 27, 28, 29, 126, 127, 128, 21, 20, 131, 130, 129, 154, 155, 153, 156, 152, 151, 177, 178, 150, 179, 180, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234, 235, 236, 237, 238, 239, 246, 245, 247, 244, 243, 242, 241, 240, 231, 232, 233, 228, 229, 230, 251, 250, 249, 248, 278, 279, 3, 208, 209, 252, 253, 254, 255, 256, 257, 258], 'time': 612.7261429399987}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2565.0, 'Upper bound': 2949.9999354965057, 'Number of objectives': 1, 'Number of constraints': 78680, 'Number of variables': 78680, 'Number of binary variables': 78400, 'Number of integer variables': 78680, 'Number of continuous variables': -78400, 'Number of nonzeros': 389763, 'Sense': 1, 'Number of solutions': 9}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'aborted', 'Wallclock time': 600.8804547786713, 'Termination condition': 'maxTimeLimit', 'Termination message': 'Optimization terminated because the time expended exceeded the value specified in the TimeLimit parameter.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 1500): ({'path_length': 2594.0, 'path': [1, 280, 3, 279, 278, 248, 249, 256, 255, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 139, 138, 137, 267, 268, 136, 135, 269, 270, 134, 133, 132, 19, 18, 17, 16, 271, 272, 273, 274, 275, 276, 277, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 15, 14, 24, 23, 25, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 44, 43, 60, 61, 118, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 116, 117, 115, 114, 113, 87, 88, 112, 111, 110, 108, 109, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 169, 102, 103, 104, 105, 106, 107, 174, 173, 172, 170, 171, 168, 167, 166, 165, 164, 163, 162, 161, 175, 160, 159, 158, 157, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 21, 20, 131, 130, 129, 154, 155, 153, 156, 152, 151, 177, 178, 150, 179, 180, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 253, 252, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 251, 250, 247, 245, 246, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 243, 242, 2], 'time': 1511.943275058}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2574.000000000001, 'Upper bound': 2594.0, 'Number of objectives': 1, 'Number of constraints': 78680, 'Number of variables': 78680, 'Number of binary variables': 78400, 'Number of integer variables': 78680, 'Number of continuous variables': -78400, 'Number of nonzeros': 389763, 'Sense': 1, 'Number of solutions': 10}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'aborted', 'Wallclock time': 1500.0224990844727, 'Termination condition': 'maxTimeLimit', 'Termination message': 'Optimization terminated because the time expended exceeded the value specified in the TimeLimit parameter.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'att48': {'optimal_solution': 10628, 'solutions': {('cplex', 600): ({'path_length': 10628.0, 'path': [1, 9, 40, 15, 12, 11, 13, 25, 14, 23, 3, 22, 16, 41, 34, 29, 2, 26, 4, 35, 45, 10, 24, 42, 5, 48, 39, 32, 21, 47, 20, 33, 46, 36, 30, 43, 17, 27, 19, 37, 6, 28, 7, 18, 44, 31, 38, 8], 'time': 265.905383452}, {'Problem': [{'Name': '', 'Lower bound': 10626.938405797095, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 2352, 'Number of variables': 2352, 'Number of binary variables': 2304, 'Number of integer variables': 48, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 265.66998195648193, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 1500): ({'path_length': 10628.0, 'path': [1, 9, 40, 15, 12, 11, 13, 25, 14, 23, 3, 22, 16, 41, 34, 29, 2, 26, 4, 35, 45, 10, 24, 42, 5, 48, 39, 32, 21, 47, 20, 33, 46, 36, 30, 43, 17, 27, 19, 37, 6, 28, 7, 18, 44, 31, 38, 8], 'time': 265.82193833900055}, {'Problem': [{'Name': '', 'Lower bound': 10626.938405797095, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 2352, 'Number of variables': 2352, 'Number of binary variables': 2304, 'Number of integer variables': 48, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 265.56914925575256, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 600): ({'path_length': 10628.0, 'path': [1, 8, 38, 31, 44, 18, 7, 28, 6, 37, 19, 27, 17, 43, 30, 36, 46, 33, 20, 47, 21, 32, 39, 48, 5, 42, 24, 10, 45, 35, 4, 26, 2, 29, 34, 41, 16, 22, 3, 23, 14, 25, 13, 11, 12, 15, 40, 9], 'time': 414.9226613319988}, {'Problem': [{'Name': 'unknown', 'Lower bound': 10628.0, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 2352, 'Number of variables': 2352, 'Number of binary variables': 2304, 'Number of integer variables': 2352, 'Number of continuous variables': -2304, 'Number of nonzeros': 11139, 'Sense': 1, 'Number of solutions': 10}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 414.58927297592163, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 1500): ({'path_length': 10628.0, 'path': [1, 8, 38, 31, 44, 18, 7, 28, 6, 37, 19, 27, 17, 43, 30, 36, 46, 33, 20, 47, 21, 32, 39, 48, 5, 42, 24, 10, 45, 35, 4, 26, 2, 29, 34, 41, 16, 22, 3, 23, 14, 25, 13, 11, 12, 15, 40, 9], 'time': 415.08801597099955}, {'Problem': [{'Name': 'unknown', 'Lower bound': 10628.0, 'Upper bound': 10628.0, 'Number of objectives': 1, 'Number of constraints': 2352, 'Number of variables': 2352, 'Number of binary variables': 2304, 'Number of integer variables': 2352, 'Number of continuous variables': -2304, 'Number of nonzeros': 11139, 'Sense': 1, 'Number of solutions': 10}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 414.7538549900055, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'bayg29': {'optimal_solution': 1610, 'solutions': {('cplex', 600): ({'path_length': 1610.0, 'path': [1, 28, 6, 12, 9, 26, 3, 29, 5, 21, 2, 20, 10, 4, 15, 18, 14, 17, 22, 11, 19, 25, 7, 23, 8, 27, 16, 13, 24], 'time': 1.044924597001227}, {'Problem': [{'Name': '', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 870, 'Number of variables': 870, 'Number of binary variables': 841, 'Number of integer variables': 29, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.9472301006317139, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 1500): ({'path_length': 1610.0, 'path': [1, 28, 6, 12, 9, 26, 3, 29, 5, 21, 2, 20, 10, 4, 15, 18, 14, 17, 22, 11, 19, 25, 7, 23, 8, 27, 16, 13, 24], 'time': 1.0152628649993858}, {'Problem': [{'Name': '', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 870, 'Number of variables': 870, 'Number of binary variables': 841, 'Number of integer variables': 29, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.9219658374786377, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 600): ({'path_length': 1610.0, 'path': [1, 24, 13, 16, 27, 8, 23, 7, 25, 19, 11, 22, 17, 14, 18, 15, 4, 10, 20, 2, 21, 5, 29, 3, 26, 9, 12, 6, 28], 'time': 1.055170776000523}, {'Problem': [{'Name': 'unknown', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 870, 'Number of variables': 870, 'Number of binary variables': 841, 'Number of integer variables': 870, 'Number of continuous variables': -841, 'Number of nonzeros': 3976, 'Sense': 1, 'Number of solutions': 10}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.9398739337921143, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 1500): ({'path_length': 1610.0, 'path': [1, 24, 13, 16, 27, 8, 23, 7, 25, 19, 11, 22, 17, 14, 18, 15, 4, 10, 20, 2, 21, 5, 29, 3, 26, 9, 12, 6, 28], 'time': 1.1659752590003336}, {'Problem': [{'Name': 'unknown', 'Lower bound': 1610.0, 'Upper bound': 1610.0, 'Number of objectives': 1, 'Number of constraints': 870, 'Number of variables': 870, 'Number of binary variables': 841, 'Number of integer variables': 870, 'Number of continuous variables': -841, 'Number of nonzeros': 3976, 'Sense': 1, 'Number of solutions': 10}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 1.0387399196624756, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'bays29': {'optimal_solution': 2020, 'solutions': {('cplex', 600): ({'path_length': 2020.0, 'path': [1, 21, 13, 16, 24, 8, 27, 23, 7, 25, 19, 11, 22, 14, 17, 18, 15, 4, 10, 20, 2, 3, 29, 26, 5, 9, 12, 6, 28], 'time': 1.2292568909997499}, {'Problem': [{'Name': '', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 870, 'Number of variables': 870, 'Number of binary variables': 841, 'Number of integer variables': 29, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 1.1286847591400146, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 1500): ({'path_length': 2020.0, 'path': [1, 21, 13, 16, 24, 8, 27, 23, 7, 25, 19, 11, 22, 14, 17, 18, 15, 4, 10, 20, 2, 3, 29, 26, 5, 9, 12, 6, 28], 'time': 1.020578536999892}, {'Problem': [{'Name': '', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 870, 'Number of variables': 870, 'Number of binary variables': 841, 'Number of integer variables': 29, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 0.9026541709899902, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 600): ({'path_length': 2020.0, 'path': [1, 21, 13, 16, 24, 8, 27, 23, 7, 25, 19, 11, 22, 14, 17, 18, 15, 4, 10, 20, 2, 3, 29, 26, 5, 9, 12, 6, 28], 'time': 0.9069297149999329}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 870, 'Number of variables': 870, 'Number of binary variables': 841, 'Number of integer variables': 870, 'Number of continuous variables': -841, 'Number of nonzeros': 3976, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.43778109550476074, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 1500): ({'path_length': 2020.0, 'path': [1, 21, 13, 16, 24, 8, 27, 23, 7, 25, 19, 11, 22, 14, 17, 18, 15, 4, 10, 20, 2, 3, 29, 26, 5, 9, 12, 6, 28], 'time': 0.5462425440000516}, {'Problem': [{'Name': 'unknown', 'Lower bound': 2020.0, 'Upper bound': 2020.0, 'Number of objectives': 1, 'Number of constraints': 870, 'Number of variables': 870, 'Number of binary variables': 841, 'Number of integer variables': 870, 'Number of continuous variables': -841, 'Number of nonzeros': 3976, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 0.4388611316680908, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'berlin52': {'optimal_solution': 7542, 'solutions': {('cplex', 600): ({'path_length': 7542.0, 'path': [1, 22, 31, 18, 3, 17, 21, 42, 7, 2, 30, 23, 20, 50, 29, 16, 46, 44, 34, 35, 36, 39, 40, 37, 38, 48, 24, 5, 15, 6, 4, 25, 12, 28, 27, 26, 47, 13, 14, 52, 11, 51, 33, 43, 10, 9, 8, 41, 19, 45, 32, 49], 'time': 2.534919052000987}, {'Problem': [{'Name': '', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 2756, 'Number of variables': 2756, 'Number of binary variables': 2704, 'Number of integer variables': 52, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 2.23744797706604, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 1500): ({'path_length': 7542.0, 'path': [1, 22, 31, 18, 3, 17, 21, 42, 7, 2, 30, 23, 20, 50, 29, 16, 46, 44, 34, 35, 36, 39, 40, 37, 38, 48, 24, 5, 15, 6, 4, 25, 12, 28, 27, 26, 47, 13, 14, 52, 11, 51, 33, 43, 10, 9, 8, 41, 19, 45, 32, 49], 'time': 2.6417642229989724}, {'Problem': [{'Name': '', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 2756, 'Number of variables': 2756, 'Number of binary variables': 2704, 'Number of integer variables': 52, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 2.3136892318725586, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 600): ({'path_length': 7542.0, 'path': [1, 22, 31, 18, 3, 17, 21, 42, 7, 2, 30, 23, 20, 50, 29, 16, 46, 44, 34, 35, 36, 39, 40, 37, 38, 48, 24, 5, 15, 6, 4, 25, 12, 28, 27, 26, 47, 13, 14, 52, 11, 51, 33, 43, 10, 9, 8, 41, 19, 45, 32, 49], 'time': 2.183537715000057}, {'Problem': [{'Name': 'unknown', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 2756, 'Number of variables': 2756, 'Number of binary variables': 2704, 'Number of integer variables': 2756, 'Number of continuous variables': -2704, 'Number of nonzeros': 13107, 'Sense': 1, 'Number of solutions': 9}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 1.6884050369262695, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 1500): ({'path_length': 7542.0, 'path': [1, 22, 31, 18, 3, 17, 21, 42, 7, 2, 30, 23, 20, 50, 29, 16, 46, 44, 34, 35, 36, 39, 40, 37, 38, 48, 24, 5, 15, 6, 4, 25, 12, 28, 27, 26, 47, 13, 14, 52, 11, 51, 33, 43, 10, 9, 8, 41, 19, 45, 32, 49], 'time': 1.7476469720004388}, {'Problem': [{'Name': 'unknown', 'Lower bound': 7542.0, 'Upper bound': 7542.0, 'Number of objectives': 1, 'Number of constraints': 2756, 'Number of variables': 2756, 'Number of binary variables': 2704, 'Number of integer variables': 2756, 'Number of continuous variables': -2704, 'Number of nonzeros': 13107, 'Sense': 1, 'Number of solutions': 9}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 1.318131923675537, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'brg180': {'optimal_solution': 1950, 'solutions': {('cplex', 600): ({'path_length': 4500.0, 'path': [0, 42, 43, 70, 71, 39, 38, 64, 65, 31, 30, 94, 95, 142, 143, 82, 83, 47, 46, 109, 108, 37, 36, 114, 115, 98, 99, 155, 154, 20, 21, 79, 78, 140, 141, 77, 76, 15, 14, 169, 168, 69, 68, 179, 178, 74, 75, 172, 173, 113, 112, 104, 105, 145, 144, 50, 51, 61, 60, 55, 54, 153, 152, 57, 56, 62, 63, 26, 27, 124, 125, 8, 9, 150, 151, 103, 102, 23, 22, 89, 88, 18, 19, 174, 175, 80, 81, 16, 17, 160, 161, 86, 87, 167, 166, 44, 45, 2, 3, 111, 110, 176, 177, 117, 116, 59, 58, 128, 129, 52, 53, 10, 11, 139, 138, 90, 91, 156, 157, 40, 41, 73, 72, 131, 130, 97, 96, 118, 119, 48, 49, 92, 93, 6, 7, 123, 122, 158, 159, 66, 67, 170, 171, 33, 32, 100, 101, 35, 34, 121, 120, 107, 106, 25, 24, 133, 132, 28, 29, 85, 84, 136, 137, 147, 146, 134, 135, 149, 148, 12, 13, 163, 162, 126, 127, 5, 4, 164, 165, 1], 'time': 603.658116654}, {'Problem': [{'Name': '', 'Lower bound': 4490.000000000829, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 32580, 'Number of variables': 32580, 'Number of binary variables': 32400, 'Number of integer variables': 180, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'aborted', 'Wallclock time': 600.0669319629669, 'Termination condition': 'maxTimeLimit'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 1500): ({'path_length': 4500.0, 'path': [0, 42, 43, 70, 71, 39, 38, 64, 65, 31, 30, 94, 95, 142, 143, 82, 83, 47, 46, 109, 108, 37, 36, 114, 115, 98, 99, 155, 154, 20, 21, 79, 78, 140, 141, 77, 76, 15, 14, 169, 168, 69, 68, 179, 178, 74, 75, 172, 173, 113, 112, 104, 105, 145, 144, 50, 51, 61, 60, 55, 54, 153, 152, 57, 56, 62, 63, 26, 27, 124, 125, 8, 9, 150, 151, 103, 102, 23, 22, 89, 88, 18, 19, 174, 175, 80, 81, 16, 17, 160, 161, 86, 87, 167, 166, 44, 45, 2, 3, 111, 110, 176, 177, 117, 116, 59, 58, 128, 129, 52, 53, 10, 11, 139, 138, 90, 91, 156, 157, 40, 41, 73, 72, 131, 130, 97, 96, 118, 119, 48, 49, 92, 93, 6, 7, 123, 122, 158, 159, 66, 67, 170, 171, 33, 32, 100, 101, 35, 34, 121, 120, 107, 106, 25, 24, 133, 132, 28, 29, 85, 84, 136, 137, 147, 146, 134, 135, 149, 148, 12, 13, 163, 162, 126, 127, 5, 4, 164, 165, 1], 'time': 1503.932488082999}, {'Problem': [{'Name': '', 'Lower bound': 4490.000000000829, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 32580, 'Number of variables': 32580, 'Number of binary variables': 32400, 'Number of integer variables': 180, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'aborted', 'Wallclock time': 1500.087828874588, 'Termination condition': 'maxTimeLimit'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 600): ({'path_length': 4500.0, 'path': [0, 1, 141, 140, 42, 43, 66, 67, 169, 168, 18, 19, 160, 161, 93, 92, 116, 117, 59, 58, 109, 108, 99, 98, 118, 119, 39, 38, 115, 114, 3, 2, 69, 68, 170, 171, 113, 112, 5, 4, 165, 164, 71, 70, 55, 54, 128, 129, 72, 73, 134, 135, 152, 153, 50, 51, 86, 87, 23, 22, 149, 148, 105, 104, 21, 20, 154, 155, 15, 14, 172, 173, 16, 17, 174, 175, 110, 111, 10, 11, 158, 159, 127, 126, 102, 103, 12, 13, 145, 144, 101, 100, 33, 32, 107, 106, 26, 27, 131, 130, 75, 74, 53, 52, 60, 61, 146, 147, 63, 62, 177, 176, 30, 31, 133, 132, 83, 82, 48, 49, 80, 81, 179, 178, 78, 79, 40, 41, 167, 166, 65, 64, 44, 45, 157, 156, 88, 89, 139, 138, 95, 94, 57, 56, 85, 84, 28, 29, 137, 136, 35, 34, 91, 90, 163, 162, 124, 125, 25, 24, 143, 142, 37, 36, 76, 77, 47, 46, 97, 96, 120, 121, 8, 9, 151, 150, 6, 7, 122, 123], 'time': 604.9749387110005}, {'Problem': [{'Name': 'unknown', 'Lower bound': 4490.000000000092, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 32580, 'Number of variables': 32580, 'Number of binary variables': 32400, 'Number of integer variables': 32580, 'Number of continuous variables': -32400, 'Number of nonzeros': 160563, 'Sense': 1, 'Number of solutions': 1}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'aborted', 'Wallclock time': 600.0320601463318, 'Termination condition': 'maxTimeLimit', 'Termination message': 'Optimization terminated because the time expended exceeded the value specified in the TimeLimit parameter.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 1500): ({'path_length': 4500.0, 'path': [0, 1, 141, 140, 42, 43, 66, 67, 169, 168, 18, 19, 160, 161, 93, 92, 116, 117, 59, 58, 109, 108, 99, 98, 118, 119, 39, 38, 115, 114, 3, 2, 69, 68, 170, 171, 113, 112, 5, 4, 165, 164, 71, 70, 55, 54, 128, 129, 72, 73, 134, 135, 152, 153, 50, 51, 86, 87, 23, 22, 149, 148, 105, 104, 21, 20, 154, 155, 15, 14, 172, 173, 16, 17, 174, 175, 110, 111, 10, 11, 158, 159, 127, 126, 102, 103, 12, 13, 145, 144, 101, 100, 33, 32, 107, 106, 26, 27, 131, 130, 75, 74, 53, 52, 60, 61, 146, 147, 63, 62, 177, 176, 30, 31, 133, 132, 83, 82, 48, 49, 80, 81, 179, 178, 78, 79, 40, 41, 167, 166, 65, 64, 44, 45, 157, 156, 88, 89, 139, 138, 95, 94, 57, 56, 85, 84, 28, 29, 137, 136, 35, 34, 91, 90, 163, 162, 124, 125, 25, 24, 143, 142, 37, 36, 76, 77, 47, 46, 97, 96, 120, 121, 8, 9, 151, 150, 6, 7, 122, 123], 'time': 1504.965133530999}, {'Problem': [{'Name': 'unknown', 'Lower bound': 4490.000000000092, 'Upper bound': 4500.0, 'Number of objectives': 1, 'Number of constraints': 32580, 'Number of variables': 32580, 'Number of binary variables': 32400, 'Number of integer variables': 32580, 'Number of continuous variables': -32400, 'Number of nonzeros': 160563, 'Sense': 1, 'Number of solutions': 1}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'aborted', 'Wallclock time': 1500.06463098526, 'Termination condition': 'maxTimeLimit', 'Termination message': 'Optimization terminated because the time expended exceeded the value specified in the TimeLimit parameter.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'ch130': {'optimal_solution': 6110, 'solutions': {('cplex', 600): ({'path_length': 6697.0, 'path': [1, 41, 39, 71, 2, 50, 130, 128, 16, 45, 5, 11, 76, 109, 61, 129, 124, 64, 69, 86, 88, 26, 7, 97, 70, 43, 104, 127, 107, 63, 68, 89, 94, 84, 36, 113, 32, 25, 48, 98, 110, 19, 27, 100, 31, 34, 17, 54, 35, 4, 106, 38, 79, 116, 24, 15, 29, 95, 12, 87, 81, 103, 77, 119, 123, 111, 101, 82, 57, 9, 56, 65, 52, 75, 74, 99, 73, 92, 91, 72, 49, 58, 53, 120, 60, 51, 42, 44, 40, 67, 13, 96, 14, 10, 102, 6, 55, 122, 23, 22, 37, 47, 33, 21, 93, 20, 118, 80, 46, 18, 8, 108, 3, 114, 126, 121, 78, 66, 85, 90, 125, 59, 30, 83, 117, 112, 115, 28, 62, 105], 'time': 602.2181802859996}, {'Problem': [{'Name': '', 'Lower bound': 5766.833333333336, 'Upper bound': 6697.0, 'Number of objectives': 1, 'Number of constraints': 17030, 'Number of variables': 17030, 'Number of binary variables': 16900, 'Number of integer variables': 130, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'aborted', 'Wallclock time': 600.0974290370941, 'Termination condition': 'maxTimeLimit'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 1500): ({'path_length': 6182.0, 'path': [1, 41, 39, 71, 130, 50, 2, 54, 35, 4, 118, 80, 46, 20, 93, 44, 42, 51, 60, 120, 53, 106, 58, 49, 72, 91, 6, 102, 55, 122, 14, 10, 67, 13, 96, 23, 47, 40, 37, 22, 33, 21, 18, 8, 108, 114, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 117, 112, 115, 28, 62, 105, 128, 16, 45, 5, 11, 76, 109, 61, 129, 124, 64, 69, 86, 88, 26, 7, 97, 70, 107, 127, 104, 43, 63, 68, 48, 25, 98, 110, 89, 94, 113, 32, 36, 84, 119, 111, 123, 101, 82, 57, 9, 56, 65, 52, 75, 74, 99, 73, 92, 38, 12, 87, 81, 103, 77, 29, 15, 24, 95, 79, 116, 100, 19, 27, 31, 17, 34], 'time': 1502.2212477760004}, {'Problem': [{'Name': '', 'Lower bound': 5818.89102564103, 'Upper bound': 6182.0, 'Number of objectives': 1, 'Number of constraints': 17030, 'Number of variables': 17030, 'Number of binary variables': 16900, 'Number of integer variables': 130, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'aborted', 'Wallclock time': 1500.1889128684998, 'Termination condition': 'maxTimeLimit'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 600): ({'path_length': 6226.0, 'path': [1, 71, 130, 50, 2, 80, 20, 93, 37, 22, 40, 47, 23, 122, 55, 44, 42, 51, 60, 120, 53, 58, 49, 72, 91, 6, 102, 10, 14, 96, 67, 13, 21, 33, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 114, 108, 8, 18, 46, 118, 54, 35, 4, 106, 38, 92, 73, 99, 74, 75, 52, 65, 56, 9, 57, 82, 101, 111, 123, 119, 84, 36, 32, 113, 25, 48, 63, 68, 98, 110, 89, 94, 77, 103, 81, 12, 87, 79, 95, 116, 24, 29, 15, 100, 19, 27, 31, 17, 34, 43, 104, 127, 107, 70, 97, 7, 26, 88, 86, 69, 64, 124, 129, 61, 109, 76, 11, 5, 45, 16, 128, 105, 62, 28, 115, 112, 117, 39, 41], 'time': 602.7840914750013}, {'Problem': [{'Name': 'unknown', 'Lower bound': 5884.0, 'Upper bound': 6226.0, 'Number of objectives': 1, 'Number of constraints': 17030, 'Number of variables': 17030, 'Number of binary variables': 16900, 'Number of integer variables': 17030, 'Number of continuous variables': -16900, 'Number of nonzeros': 83463, 'Sense': 1, 'Number of solutions': 10}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'aborted', 'Wallclock time': 600.0707221031189, 'Termination condition': 'maxTimeLimit', 'Termination message': 'Optimization terminated because the time expended exceeded the value specified in the TimeLimit parameter.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 1500): ({'path_length': 6226.0, 'path': [1, 71, 130, 50, 2, 80, 20, 93, 37, 22, 40, 47, 23, 122, 55, 44, 42, 51, 60, 120, 53, 58, 49, 72, 91, 6, 102, 10, 14, 96, 67, 13, 21, 33, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 114, 108, 8, 18, 46, 118, 54, 35, 4, 106, 38, 92, 73, 99, 74, 75, 52, 65, 56, 9, 57, 82, 101, 111, 123, 119, 84, 36, 32, 113, 25, 48, 63, 68, 98, 110, 89, 94, 77, 103, 81, 12, 87, 79, 95, 116, 24, 29, 15, 100, 19, 27, 31, 17, 34, 43, 104, 127, 107, 70, 97, 7, 26, 88, 86, 69, 64, 124, 129, 61, 109, 76, 11, 5, 45, 16, 128, 105, 62, 28, 115, 112, 117, 39, 41], 'time': 1502.514795641}, {'Problem': [{'Name': 'unknown', 'Lower bound': 5980.0, 'Upper bound': 6226.0, 'Number of objectives': 1, 'Number of constraints': 17030, 'Number of variables': 17030, 'Number of binary variables': 16900, 'Number of integer variables': 17030, 'Number of continuous variables': -16900, 'Number of nonzeros': 83463, 'Sense': 1, 'Number of solutions': 10}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'aborted', 'Wallclock time': 1500.0575139522552, 'Termination condition': 'maxTimeLimit', 'Termination message': 'Optimization terminated because the time expended exceeded the value specified in the TimeLimit parameter.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'ch150': {'optimal_solution': 6528, 'solutions': {('cplex', 600): ({'path_length': 7045.0, 'path': [1, 98, 103, 82, 95, 107, 5, 100, 143, 97, 124, 89, 8, 7, 84, 30, 96, 35, 93, 52, 126, 33, 105, 111, 16, 59, 78, 15, 133, 77, 131, 32, 23, 38, 116, 101, 39, 57, 41, 67, 43, 109, 51, 20, 25, 141, 58, 55, 50, 137, 132, 65, 85, 142, 18, 75, 26, 146, 56, 83, 90, 46, 92, 54, 134, 138, 42, 9, 28, 6, 37, 2, 19, 99, 114, 102, 108, 70, 135, 86, 29, 81, 110, 47, 120, 139, 40, 53, 12, 24, 118, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 27, 31, 129, 144, 49, 147, 145, 72, 80, 122, 14, 64, 112, 136, 123, 74, 13, 106, 91, 119, 68, 128, 104, 4, 115, 44, 71, 45, 150, 21, 125, 22, 149, 62, 3, 94, 121, 79, 88, 10, 113, 63, 48, 73, 76, 34, 87], 'time': 602.9902392259974}, {'Problem': [{'Name': '', 'Lower bound': 6416.382544644596, 'Upper bound': 7045.0, 'Number of objectives': 1, 'Number of constraints': 22650, 'Number of variables': 22650, 'Number of binary variables': 22500, 'Number of integer variables': 150, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'aborted', 'Wallclock time': 600.1765949726105, 'Termination condition': 'maxTimeLimit'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 1500): ({'path_length': 6762.0, 'path': [1, 98, 103, 82, 95, 107, 5, 100, 143, 97, 124, 89, 8, 7, 84, 30, 96, 35, 93, 52, 126, 33, 105, 111, 16, 133, 59, 15, 78, 80, 14, 122, 77, 131, 32, 23, 38, 41, 57, 39, 101, 116, 67, 43, 109, 51, 20, 25, 110, 81, 29, 86, 108, 70, 135, 50, 55, 58, 141, 83, 90, 46, 138, 134, 54, 92, 56, 146, 26, 75, 18, 142, 85, 65, 132, 137, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 47, 139, 40, 53, 12, 24, 118, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 27, 31, 129, 144, 49, 147, 72, 145, 64, 112, 136, 123, 74, 13, 106, 91, 119, 68, 128, 104, 4, 45, 71, 44, 115, 150, 21, 125, 22, 149, 62, 3, 94, 121, 79, 88, 10, 113, 63, 48, 73, 76, 34, 87], 'time': 1504.792250696999}, {'Problem': [{'Name': '', 'Lower bound': 6441.0, 'Upper bound': 6762.0, 'Number of objectives': 1, 'Number of constraints': 22650, 'Number of variables': 22650, 'Number of binary variables': 22500, 'Number of integer variables': 150, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'aborted', 'Wallclock time': 1501.6046969890594, 'Termination condition': 'maxTimeLimit'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 600): ({'path_length': 7132.0, 'path': [1, 87, 34, 76, 73, 48, 63, 113, 94, 88, 121, 10, 3, 62, 149, 125, 22, 104, 4, 115, 150, 21, 78, 15, 79, 59, 16, 133, 77, 122, 14, 80, 72, 145, 136, 112, 64, 44, 71, 45, 128, 68, 119, 91, 106, 13, 74, 123, 31, 27, 129, 144, 49, 147, 23, 38, 32, 131, 67, 43, 109, 51, 20, 81, 29, 86, 135, 70, 108, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 40, 24, 118, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 41, 57, 39, 101, 116, 12, 53, 139, 47, 110, 25, 90, 46, 138, 134, 54, 92, 126, 93, 124, 35, 52, 111, 105, 33, 56, 146, 26, 75, 83, 141, 58, 55, 50, 137, 132, 65, 85, 142, 18, 143, 100, 97, 5, 107, 95, 82, 103, 84, 8, 89, 96, 30, 7, 98], 'time': 603.4724123779997}, {'Problem': [{'Name': 'unknown', 'Lower bound': 6407.0, 'Upper bound': 7132.0, 'Number of objectives': 1, 'Number of constraints': 22650, 'Number of variables': 22650, 'Number of binary variables': 22500, 'Number of integer variables': 22650, 'Number of continuous variables': -22500, 'Number of nonzeros': 111303, 'Sense': 1, 'Number of solutions': 6}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'aborted', 'Wallclock time': 600.0893020629883, 'Termination condition': 'maxTimeLimit', 'Termination message': 'Optimization terminated because the time expended exceeded the value specified in the TimeLimit parameter.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 1500): ({'path_length': 7132.0, 'path': [1, 87, 34, 76, 73, 48, 63, 113, 94, 88, 121, 10, 3, 62, 149, 125, 22, 104, 4, 115, 150, 21, 78, 15, 79, 59, 16, 133, 77, 122, 14, 80, 72, 145, 136, 112, 64, 44, 71, 45, 128, 68, 119, 91, 106, 13, 74, 123, 31, 27, 129, 144, 49, 147, 23, 38, 32, 131, 67, 43, 109, 51, 20, 81, 29, 86, 135, 70, 108, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 40, 24, 118, 127, 69, 36, 61, 11, 148, 130, 17, 66, 60, 140, 117, 41, 57, 39, 101, 116, 12, 53, 139, 47, 110, 25, 90, 46, 138, 134, 54, 92, 126, 93, 124, 35, 52, 111, 105, 33, 56, 146, 26, 75, 83, 141, 58, 55, 50, 137, 132, 65, 85, 142, 18, 143, 100, 97, 5, 107, 95, 82, 103, 84, 8, 89, 96, 30, 7, 98], 'time': 1503.3834203509978}, {'Problem': [{'Name': 'unknown', 'Lower bound': 6427.0, 'Upper bound': 7132.0, 'Number of objectives': 1, 'Number of constraints': 22650, 'Number of variables': 22650, 'Number of binary variables': 22500, 'Number of integer variables': 22650, 'Number of continuous variables': -22500, 'Number of nonzeros': 111303, 'Sense': 1, 'Number of solutions': 6}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'aborted', 'Wallclock time': 1500.1044149398804, 'Termination condition': 'maxTimeLimit', 'Termination message': 'Optimization terminated because the time expended exceeded the value specified in the TimeLimit parameter.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'eil101': {'optimal_solution': 629, 'solutions': {('cplex', 600): ({'path_length': 629.0, 'path': [1, 69, 27, 101, 53, 28, 26, 12, 80, 68, 29, 24, 54, 4, 55, 25, 39, 67, 23, 56, 75, 22, 41, 74, 72, 73, 21, 40, 58, 13, 94, 95, 97, 87, 2, 57, 15, 43, 42, 14, 38, 44, 86, 16, 61, 85, 91, 100, 37, 98, 92, 59, 93, 99, 96, 6, 89, 52, 18, 83, 60, 5, 84, 17, 45, 8, 46, 47, 36, 49, 64, 63, 90, 32, 10, 62, 11, 19, 48, 82, 7, 88, 31, 70, 30, 20, 66, 71, 65, 35, 34, 78, 81, 9, 51, 33, 79, 3, 77, 76, 50], 'time': 36.726999496000644}, {'Problem': [{'Name': '', 'Lower bound': 628.9999999999985, 'Upper bound': 628.9999999999985, 'Number of objectives': 1, 'Number of constraints': 10302, 'Number of variables': 10302, 'Number of binary variables': 10201, 'Number of integer variables': 101, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 35.378586292266846, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 1500): ({'path_length': 629.0, 'path': [1, 69, 27, 101, 53, 28, 26, 12, 80, 68, 29, 24, 54, 4, 55, 25, 39, 67, 23, 56, 75, 22, 41, 74, 72, 73, 21, 40, 58, 13, 94, 95, 97, 87, 2, 57, 15, 43, 42, 14, 38, 44, 86, 16, 61, 85, 91, 100, 37, 98, 92, 59, 93, 99, 96, 6, 89, 52, 18, 83, 60, 5, 84, 17, 45, 8, 46, 47, 36, 49, 64, 63, 90, 32, 10, 62, 11, 19, 48, 82, 7, 88, 31, 70, 30, 20, 66, 71, 65, 35, 34, 78, 81, 9, 51, 33, 79, 3, 77, 76, 50], 'time': 36.86766390599951}, {'Problem': [{'Name': '', 'Lower bound': 628.9999999999985, 'Upper bound': 628.9999999999985, 'Number of objectives': 1, 'Number of constraints': 10302, 'Number of variables': 10302, 'Number of binary variables': 10201, 'Number of integer variables': 101, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 35.58651900291443, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 600): ({'path_length': 629.0, 'path': [1, 50, 76, 77, 3, 79, 33, 51, 9, 81, 78, 34, 35, 71, 65, 66, 20, 30, 70, 31, 88, 7, 82, 48, 19, 11, 62, 10, 32, 90, 63, 64, 49, 36, 47, 46, 8, 45, 17, 84, 5, 60, 83, 18, 52, 89, 6, 96, 99, 93, 59, 92, 37, 98, 100, 91, 85, 61, 16, 86, 44, 38, 14, 42, 43, 15, 57, 2, 87, 97, 95, 94, 13, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 67, 39, 25, 55, 4, 54, 24, 29, 68, 80, 12, 26, 28, 53, 101, 27, 69], 'time': 27.01644752900029}, {'Problem': [{'Name': 'unknown', 'Lower bound': 629.0, 'Upper bound': 629.0, 'Number of objectives': 1, 'Number of constraints': 10302, 'Number of variables': 10302, 'Number of binary variables': 10201, 'Number of integer variables': 10302, 'Number of continuous variables': -10201, 'Number of nonzeros': 50200, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 25.32669186592102, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 1500): ({'path_length': 629.0, 'path': [1, 50, 76, 77, 3, 79, 33, 51, 9, 81, 78, 34, 35, 71, 65, 66, 20, 30, 70, 31, 88, 7, 82, 48, 19, 11, 62, 10, 32, 90, 63, 64, 49, 36, 47, 46, 8, 45, 17, 84, 5, 60, 83, 18, 52, 89, 6, 96, 99, 93, 59, 92, 37, 98, 100, 91, 85, 61, 16, 86, 44, 38, 14, 42, 43, 15, 57, 2, 87, 97, 95, 94, 13, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 67, 39, 25, 55, 4, 54, 24, 29, 68, 80, 12, 26, 28, 53, 101, 27, 69], 'time': 27.557502702999045}, {'Problem': [{'Name': 'unknown', 'Lower bound': 629.0, 'Upper bound': 629.0, 'Number of objectives': 1, 'Number of constraints': 10302, 'Number of variables': 10302, 'Number of binary variables': 10201, 'Number of integer variables': 10302, 'Number of continuous variables': -10201, 'Number of nonzeros': 50200, 'Sense': 1, 'Number of solutions': 7}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 26.099247217178345, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}, 'eil51': {'optimal_solution': 426, 'solutions': {('cplex', 600): ({'path_length': 426.0, 'path': [1, 32, 11, 38, 5, 37, 17, 4, 18, 47, 12, 46, 51, 27, 6, 48, 23, 7, 43, 24, 14, 25, 13, 41, 40, 19, 42, 44, 15, 45, 33, 39, 10, 49, 9, 30, 34, 50, 16, 21, 29, 2, 20, 35, 36, 3, 28, 31, 26, 8, 22], 'time': 4.437114954998833}, {'Problem': [{'Name': '', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 2652, 'Number of variables': 2652, 'Number of binary variables': 2601, 'Number of integer variables': 51, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 4.190086126327515, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('cplex', 1500): ({'path_length': 426.0, 'path': [1, 32, 11, 38, 5, 37, 17, 4, 18, 47, 12, 46, 51, 27, 6, 48, 23, 7, 43, 24, 14, 25, 13, 41, 40, 19, 42, 44, 15, 45, 33, 39, 10, 49, 9, 30, 34, 50, 16, 21, 29, 2, 20, 35, 36, 3, 28, 31, 26, 8, 22], 'time': 5.677078916996834}, {'Problem': [{'Name': '', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 2652, 'Number of variables': 2652, 'Number of binary variables': 2601, 'Number of integer variables': 51, 'Number of continuous variables': 0, 'Number of nonzeros': None, 'Sense': 1}], 'Solver': [{'Name': 'CPLEX 12.10.0.0', 'Status': 'ok', 'Wallclock time': 5.304730176925659, 'Termination condition': 'optimal'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 600): ({'path_length': 426.0, 'path': [1, 22, 8, 26, 31, 28, 3, 36, 35, 20, 2, 29, 21, 16, 50, 34, 30, 9, 49, 10, 39, 33, 45, 15, 44, 42, 40, 19, 41, 13, 25, 14, 24, 43, 7, 23, 48, 6, 27, 51, 46, 12, 47, 18, 4, 17, 37, 5, 38, 11, 32], 'time': 2.9655054729992116}, {'Problem': [{'Name': 'unknown', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 2652, 'Number of variables': 2652, 'Number of binary variables': 2601, 'Number of integer variables': 2652, 'Number of continuous variables': -2601, 'Number of nonzeros': 12600, 'Sense': 1, 'Number of solutions': 8}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 2.5529110431671143, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]}), ('gurobi', 1500): ({'path_length': 426.0, 'path': [1, 22, 8, 26, 31, 28, 3, 36, 35, 20, 2, 29, 21, 16, 50, 34, 30, 9, 49, 10, 39, 33, 45, 15, 44, 42, 40, 19, 41, 13, 25, 14, 24, 43, 7, 23, 48, 6, 27, 51, 46, 12, 47, 18, 4, 17, 37, 5, 38, 11, 32], 'time': 2.92041079000046}, {'Problem': [{'Name': 'unknown', 'Lower bound': 426.0, 'Upper bound': 426.0, 'Number of objectives': 1, 'Number of constraints': 2652, 'Number of variables': 2652, 'Number of binary variables': 2601, 'Number of integer variables': 2652, 'Number of continuous variables': -2601, 'Number of nonzeros': 12600, 'Sense': 1, 'Number of solutions': 8}], 'Solver': [{'Name': 'Gurobi 9.03', 'Status': 'ok', 'Wallclock time': 2.5472090244293213, 'Termination condition': 'optimal', 'Termination message': 'Model was solved to optimality (subject to tolerances), and an optimal solution is available.'}], 'Solution': [OrderedDict([('number of solutions', 0), ('number of solutions displayed', 0)])]})}}}, 'two_opt': {'a280': {'optimal_solution': 2579, 'solutions': {(60,): {'path_length': 2978, 'path': [178, 151, 152, 156, 153, 155, 154, 129, 128, 21, 20, 19, 18, 17, 133, 132, 131, 130, 127, 126, 125, 30, 31, 32, 29, 28, 27, 26, 22, 25, 23, 24, 14, 13, 12, 11, 10, 8, 7, 9, 275, 274, 273, 272, 271, 16, 15, 270, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 179, 180, 181, 176, 177, 158, 157, 119, 120, 121, 122, 123, 124, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 60, 61, 118, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 116, 115, 114, 111, 110, 108, 104, 103, 102, 101, 100, 99, 98, 93, 94, 95, 96, 97, 92, 91, 90, 89, 109, 112, 88, 87, 113, 117, 59, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 105, 106, 107, 173, 174, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 160, 159, 182, 183, 184, 185, 187, 186, 189, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 251, 250, 247, 244, 241, 240, 239, 238, 231, 232, 233, 234, 235, 236, 237, 246, 245, 243, 242, 2, 280, 3, 4, 277, 276, 6, 5, 1, 279, 278, 248, 249, 256, 255, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 268, 267, 266, 193], 'time': 62.74154952200115}, (150,): {'path_length': 2914, 'path': [178, 151, 152, 156, 153, 155, 154, 129, 128, 21, 20, 19, 18, 17, 133, 132, 131, 130, 127, 126, 125, 30, 31, 32, 29, 28, 27, 26, 22, 25, 23, 24, 14, 13, 12, 11, 10, 8, 7, 9, 275, 274, 273, 272, 271, 16, 15, 270, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 179, 180, 181, 176, 177, 158, 157, 119, 120, 121, 122, 123, 124, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 60, 61, 118, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 116, 115, 114, 111, 110, 108, 104, 103, 102, 101, 100, 99, 98, 93, 94, 95, 96, 97, 92, 91, 90, 89, 109, 112, 88, 87, 113, 117, 59, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 105, 106, 107, 173, 174, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 175, 160, 159, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 251, 250, 247, 244, 245, 246, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 242, 2, 280, 3, 1, 5, 6, 276, 277, 4, 279, 278, 248, 249, 256, 255, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 268, 267, 266, 200, 199, 193], 'time': 153.06073354699765}, (300,): {'path_length': 2870, 'path': [178, 151, 152, 156, 153, 155, 154, 129, 128, 21, 20, 19, 18, 17, 133, 132, 131, 130, 127, 126, 125, 30, 31, 32, 29, 28, 27, 26, 22, 25, 23, 24, 14, 13, 12, 11, 10, 8, 7, 9, 275, 274, 273, 272, 271, 16, 15, 270, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 179, 180, 181, 176, 177, 158, 157, 119, 120, 121, 122, 123, 124, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 60, 61, 118, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 116, 115, 114, 111, 110, 108, 112, 113, 117, 59, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 87, 88, 89, 109, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 175, 160, 159, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 251, 250, 247, 244, 245, 246, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 242, 2, 280, 3, 1, 5, 6, 276, 277, 4, 279, 278, 248, 249, 256, 255, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 268, 267, 266, 200, 199, 193], 'time': 308.601697959999}}}, 'att48': {'optimal_solution': 10628, 'solutions': {(60,): {'path_length': 11939, 'path': [9, 1, 8, 38, 31, 44, 18, 7, 28, 6, 37, 19, 27, 17, 43, 30, 36, 46, 33, 15, 12, 20, 47, 21, 13, 25, 14, 23, 11, 40, 3, 22, 16, 41, 34, 29, 5, 48, 39, 32, 24, 10, 45, 35, 4, 26, 42, 2], 'time': 0.6603483869985212}, (150,): {'path_length': 11939, 'path': [9, 1, 8, 38, 31, 44, 18, 7, 28, 6, 37, 19, 27, 17, 43, 30, 36, 46, 33, 15, 12, 20, 47, 21, 13, 25, 14, 23, 11, 40, 3, 22, 16, 41, 34, 29, 5, 48, 39, 32, 24, 10, 45, 35, 4, 26, 42, 2], 'time': 0.6713181619998068}, (300,): {'path_length': 11939, 'path': [9, 1, 8, 38, 31, 44, 18, 7, 28, 6, 37, 19, 27, 17, 43, 30, 36, 46, 33, 15, 12, 20, 47, 21, 13, 25, 14, 23, 11, 40, 3, 22, 16, 41, 34, 29, 5, 48, 39, 32, 24, 10, 45, 35, 4, 26, 42, 2], 'time': 0.762761556001351}}}, 'bayg29': {'optimal_solution': 1610, 'solutions': {(60,): {'path_length': 1743, 'path': [20, 10, 4, 15, 19, 16, 13, 2, 21, 5, 29, 3, 26, 9, 12, 6, 28, 1, 24, 8, 27, 23, 7, 25, 11, 22, 14, 18, 17], 'time': 0.16605445800087182}, (150,): {'path_length': 1743, 'path': [20, 10, 4, 15, 19, 16, 13, 2, 21, 5, 29, 3, 26, 9, 12, 6, 28, 1, 24, 8, 27, 23, 7, 25, 11, 22, 14, 18, 17], 'time': 0.1635138259989617}, (300,): {'path_length': 1743, 'path': [20, 10, 4, 15, 19, 16, 13, 2, 21, 5, 29, 3, 26, 9, 12, 6, 28, 1, 24, 8, 27, 23, 7, 25, 11, 22, 14, 18, 17], 'time': 0.16556105599738657}}}, 'bays29': {'optimal_solution': 2020, 'solutions': {(60,): {'path_length': 2212, 'path': [22, 14, 11, 7, 23, 25, 19, 16, 27, 8, 24, 13, 1, 28, 6, 12, 9, 5, 26, 29, 3, 2, 21, 20, 10, 4, 15, 18, 17], 'time': 0.10617951700260164}, (150,): {'path_length': 2212, 'path': [22, 14, 11, 7, 23, 25, 19, 16, 27, 8, 24, 13, 1, 28, 6, 12, 9, 5, 26, 29, 3, 2, 21, 20, 10, 4, 15, 18, 17], 'time': 0.11129290500321076}, (300,): {'path_length': 2212, 'path': [22, 14, 11, 7, 23, 25, 19, 16, 27, 8, 24, 13, 1, 28, 6, 12, 9, 5, 26, 29, 3, 2, 21, 20, 10, 4, 15, 18, 17], 'time': 0.10559704600018449}}}, 'berlin52': {'optimal_solution': 7542, 'solutions': {(60,): {'path_length': 8554, 'path': [39, 36, 35, 34, 37, 40, 38, 48, 24, 5, 15, 6, 4, 25, 46, 44, 16, 50, 20, 23, 31, 21, 17, 3, 18, 22, 1, 49, 32, 45, 19, 41, 8, 9, 10, 43, 33, 51, 12, 28, 27, 11, 52, 14, 13, 26, 47, 29, 30, 42, 7, 2], 'time': 0.8098557070006791}, (150,): {'path_length': 8554, 'path': [39, 36, 35, 34, 37, 40, 38, 48, 24, 5, 15, 6, 4, 25, 46, 44, 16, 50, 20, 23, 31, 21, 17, 3, 18, 22, 1, 49, 32, 45, 19, 41, 8, 9, 10, 43, 33, 51, 12, 28, 27, 11, 52, 14, 13, 26, 47, 29, 30, 42, 7, 2], 'time': 0.7238271690002875}, (300,): {'path_length': 8554, 'path': [39, 36, 35, 34, 37, 40, 38, 48, 24, 5, 15, 6, 4, 25, 46, 44, 16, 50, 20, 23, 31, 21, 17, 3, 18, 22, 1, 49, 32, 45, 19, 41, 8, 9, 10, 43, 33, 51, 12, 28, 27, 11, 52, 14, 13, 26, 47, 29, 30, 42, 7, 2], 'time': 0.7274148789983883}}}, 'brg180': {'optimal_solution': 1950, 'solutions': {(60,): {'path_length': 2010, 'path': [26, 25, 24, 35, 34, 33, 32, 31, 30, 29, 28, 27, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 122, 121, 120, 131, 130, 129, 128, 127, 126, 125, 124, 123, 48, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 72, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 36, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 96, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 108, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 84, 95, 94, 93, 92, 91, 90, 89, 88, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 132, 85, 86, 87, 12, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 144, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 60, 71, 70, 69, 68, 67, 66, 65, 64, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 156, 61, 62, 63, 170, 169, 168, 179, 178, 177, 176, 175, 174, 173, 172, 171], 'time': 15.718219732996658}, (150,): {'path_length': 2010, 'path': [26, 25, 24, 35, 34, 33, 32, 31, 30, 29, 28, 27, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 122, 121, 120, 131, 130, 129, 128, 127, 126, 125, 124, 123, 48, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 72, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 36, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 96, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 108, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 84, 95, 94, 93, 92, 91, 90, 89, 88, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 132, 85, 86, 87, 12, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 144, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 60, 71, 70, 69, 68, 67, 66, 65, 64, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 156, 61, 62, 63, 170, 169, 168, 179, 178, 177, 176, 175, 174, 173, 172, 171], 'time': 16.066293432002567}, (300,): {'path_length': 2010, 'path': [26, 25, 24, 35, 34, 33, 32, 31, 30, 29, 28, 27, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 122, 121, 120, 131, 130, 129, 128, 127, 126, 125, 124, 123, 48, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 72, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 36, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 96, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 108, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 84, 95, 94, 93, 92, 91, 90, 89, 88, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 132, 85, 86, 87, 12, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 144, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 60, 71, 70, 69, 68, 67, 66, 65, 64, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 156, 61, 62, 63, 170, 169, 168, 179, 178, 177, 176, 175, 174, 173, 172, 171], 'time': 16.127149626001483}}}, 'ch130': {'optimal_solution': 6110, 'solutions': {(60,): {'path_length': 7135, 'path': [3, 114, 108, 8, 126, 30, 59, 121, 78, 90, 125, 85, 66, 28, 115, 83, 117, 112, 62, 105, 128, 16, 45, 5, 11, 64, 69, 86, 88, 7, 68, 63, 70, 97, 26, 124, 129, 61, 109, 76, 1, 41, 39, 71, 130, 50, 2, 118, 20, 80, 46, 18, 21, 33, 23, 55, 122, 96, 13, 67, 14, 10, 102, 6, 91, 72, 92, 73, 99, 74, 75, 52, 9, 57, 56, 65, 12, 87, 81, 103, 77, 94, 29, 15, 24, 116, 95, 79, 38, 106, 58, 49, 53, 120, 60, 51, 42, 44, 40, 47, 22, 37, 93, 4, 35, 54, 17, 34, 31, 100, 27, 19, 104, 127, 107, 43, 89, 110, 98, 48, 25, 113, 32, 36, 84, 119, 111, 123, 101, 82], 'time': 57.328698032997636}, (150,): {'path_length': 7135, 'path': [3, 114, 108, 8, 126, 30, 59, 121, 78, 90, 125, 85, 66, 28, 115, 83, 117, 112, 62, 105, 128, 16, 45, 5, 11, 64, 69, 86, 88, 7, 68, 63, 70, 97, 26, 124, 129, 61, 109, 76, 1, 41, 39, 71, 130, 50, 2, 118, 20, 80, 46, 18, 21, 33, 23, 55, 122, 96, 13, 67, 14, 10, 102, 6, 91, 72, 92, 73, 99, 74, 75, 52, 9, 57, 56, 65, 12, 87, 81, 103, 77, 94, 29, 15, 24, 116, 95, 79, 38, 106, 58, 49, 53, 120, 60, 51, 42, 44, 40, 47, 22, 37, 93, 4, 35, 54, 17, 34, 31, 100, 27, 19, 104, 127, 107, 43, 89, 110, 98, 48, 25, 113, 32, 36, 84, 119, 111, 123, 101, 82], 'time': 57.86951727899941}, (300,): {'path_length': 7135, 'path': [3, 114, 108, 8, 126, 30, 59, 121, 78, 90, 125, 85, 66, 28, 115, 83, 117, 112, 62, 105, 128, 16, 45, 5, 11, 64, 69, 86, 88, 7, 68, 63, 70, 97, 26, 124, 129, 61, 109, 76, 1, 41, 39, 71, 130, 50, 2, 118, 20, 80, 46, 18, 21, 33, 23, 55, 122, 96, 13, 67, 14, 10, 102, 6, 91, 72, 92, 73, 99, 74, 75, 52, 9, 57, 56, 65, 12, 87, 81, 103, 77, 94, 29, 15, 24, 116, 95, 79, 38, 106, 58, 49, 53, 120, 60, 51, 42, 44, 40, 47, 22, 37, 93, 4, 35, 54, 17, 34, 31, 100, 27, 19, 104, 127, 107, 43, 89, 110, 98, 48, 25, 113, 32, 36, 84, 119, 111, 123, 101, 82], 'time': 57.548107041999174}}}, 'ch150': {'optimal_solution': 6528, 'solutions': {(60,): {'path_length': 7226, 'path': [70, 108, 135, 50, 58, 55, 65, 132, 137, 102, 114, 99, 19, 2, 37, 6, 28, 9, 42, 120, 47, 110, 81, 29, 86, 141, 25, 20, 51, 109, 134, 138, 54, 92, 46, 90, 83, 56, 146, 26, 75, 18, 85, 142, 143, 100, 82, 95, 107, 5, 97, 124, 96, 89, 8, 7, 84, 30, 63, 34, 103, 98, 1, 87, 76, 73, 48, 113, 10, 94, 88, 3, 62, 149, 125, 22, 104, 4, 128, 68, 119, 91, 106, 13, 74, 123, 31, 27, 129, 144, 49, 147, 72, 145, 136, 112, 64, 44, 71, 45, 115, 150, 21, 79, 121, 52, 35, 93, 126, 33, 105, 111, 133, 16, 59, 15, 78, 80, 14, 122, 77, 131, 23, 38, 32, 67, 43, 116, 101, 41, 39, 57, 117, 140, 60, 66, 17, 130, 148, 11, 61, 36, 69, 127, 118, 40, 139, 53, 24, 12], 'time': 60.57075202700071}, (150,): {'path_length': 7194, 'path': [70, 108, 135, 50, 86, 29, 81, 110, 47, 120, 42, 9, 28, 6, 37, 2, 19, 99, 114, 102, 137, 132, 65, 55, 58, 141, 25, 20, 51, 109, 134, 138, 54, 92, 46, 90, 83, 56, 146, 26, 75, 18, 85, 142, 143, 100, 82, 95, 107, 5, 97, 124, 96, 89, 8, 7, 84, 30, 63, 34, 103, 98, 1, 87, 76, 73, 48, 113, 10, 94, 88, 3, 62, 149, 125, 22, 104, 4, 128, 68, 119, 91, 106, 13, 74, 123, 31, 27, 129, 144, 49, 147, 72, 145, 136, 112, 64, 44, 71, 45, 115, 150, 21, 79, 121, 52, 35, 93, 126, 33, 105, 111, 133, 16, 59, 15, 78, 80, 14, 122, 77, 131, 23, 38, 32, 67, 43, 116, 101, 41, 39, 57, 117, 140, 60, 66, 17, 130, 148, 11, 61, 36, 69, 127, 118, 40, 139, 53, 24, 12], 'time': 63.83790345400121}, (300,): {'path_length': 7194, 'path': [70, 108, 135, 50, 86, 29, 81, 110, 47, 120, 42, 9, 28, 6, 37, 2, 19, 99, 114, 102, 137, 132, 65, 55, 58, 141, 25, 20, 51, 109, 134, 138, 54, 92, 46, 90, 83, 56, 146, 26, 75, 18, 85, 142, 143, 100, 82, 95, 107, 5, 97, 124, 96, 89, 8, 7, 84, 30, 63, 34, 103, 98, 1, 87, 76, 73, 48, 113, 10, 94, 88, 3, 62, 149, 125, 22, 104, 4, 128, 68, 119, 91, 106, 13, 74, 123, 31, 27, 129, 144, 49, 147, 72, 145, 136, 112, 64, 44, 71, 45, 115, 150, 21, 79, 121, 52, 35, 93, 126, 33, 105, 111, 133, 16, 59, 15, 78, 80, 14, 122, 77, 131, 23, 38, 32, 67, 43, 116, 101, 41, 39, 57, 117, 140, 60, 66, 17, 130, 148, 11, 61, 36, 69, 127, 118, 40, 139, 53, 24, 12], 'time': 64.00091965899992}}}, 'eil101': {'optimal_solution': 629, 'solutions': {(60,): {'path_length': 689, 'path': [28, 101, 53, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 39, 4, 54, 26, 12, 80, 68, 77, 76, 50, 1, 69, 27, 52, 18, 89, 6, 94, 13, 2, 57, 15, 43, 42, 87, 97, 95, 96, 99, 59, 92, 37, 98, 100, 91, 85, 93, 61, 16, 44, 14, 38, 86, 17, 84, 5, 60, 83, 45, 46, 8, 82, 48, 47, 36, 49, 19, 11, 64, 63, 90, 32, 10, 62, 7, 88, 31, 70, 30, 20, 51, 33, 81, 9, 66, 65, 71, 35, 34, 78, 79, 3, 29, 24, 55, 25, 67], 'time': 17.745760596000764}, (150,): {'path_length': 689, 'path': [28, 101, 53, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 39, 4, 54, 26, 12, 80, 68, 77, 76, 50, 1, 69, 27, 52, 18, 89, 6, 94, 13, 2, 57, 15, 43, 42, 87, 97, 95, 96, 99, 59, 92, 37, 98, 100, 91, 85, 93, 61, 16, 44, 14, 38, 86, 17, 84, 5, 60, 83, 45, 46, 8, 82, 48, 47, 36, 49, 19, 11, 64, 63, 90, 32, 10, 62, 7, 88, 31, 70, 30, 20, 51, 33, 81, 9, 66, 65, 71, 35, 34, 78, 79, 3, 29, 24, 55, 25, 67], 'time': 17.7448783990003}, (300,): {'path_length': 689, 'path': [28, 101, 53, 58, 40, 21, 73, 72, 74, 22, 41, 75, 56, 23, 39, 4, 54, 26, 12, 80, 68, 77, 76, 50, 1, 69, 27, 52, 18, 89, 6, 94, 13, 2, 57, 15, 43, 42, 87, 97, 95, 96, 99, 59, 92, 37, 98, 100, 91, 85, 93, 61, 16, 44, 14, 38, 86, 17, 84, 5, 60, 83, 45, 46, 8, 82, 48, 47, 36, 49, 19, 11, 64, 63, 90, 32, 10, 62, 7, 88, 31, 70, 30, 20, 51, 33, 81, 9, 66, 65, 71, 35, 34, 78, 79, 3, 29, 24, 55, 25, 67], 'time': 17.537925246997474}}}, 'eil51': {'optimal_solution': 426, 'solutions': {(60,): {'path_length': 435, 'path': [7, 23, 48, 6, 27, 1, 32, 11, 38, 5, 49, 9, 50, 16, 2, 22, 8, 26, 31, 28, 3, 36, 35, 20, 29, 21, 34, 30, 10, 39, 33, 45, 15, 44, 42, 19, 40, 41, 13, 4, 17, 37, 12, 46, 51, 47, 18, 25, 14, 24, 43], 'time': 1.0372958759980975}, (150,): {'path_length': 435, 'path': [7, 23, 48, 6, 27, 1, 32, 11, 38, 5, 49, 9, 50, 16, 2, 22, 8, 26, 31, 28, 3, 36, 35, 20, 29, 21, 34, 30, 10, 39, 33, 45, 15, 44, 42, 19, 40, 41, 13, 4, 17, 37, 12, 46, 51, 47, 18, 25, 14, 24, 43], 'time': 0.9622718389982765}, (300,): {'path_length': 435, 'path': [7, 23, 48, 6, 27, 1, 32, 11, 38, 5, 49, 9, 50, 16, 2, 22, 8, 26, 31, 28, 3, 36, 35, 20, 29, 21, 34, 30, 10, 39, 33, 45, 15, 44, 42, 19, 40, 41, 13, 4, 17, 37, 12, 46, 51, 47, 18, 25, 14, 24, 43], 'time': 0.9789160840009572}}}}, 'christofides': {'a280': {'optimal_solution': 2579, 'solutions': {'path_len': 2913.0, 'path': [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 24, 23, 25, 22, 26, 27, 28, 29, 31, 33, 34, 36, 35, 38, 37, 39, 40, 41, 42, 43, 60, 61, 118, 62, 63, 59, 44, 45, 56, 55, 46, 47, 54, 53, 48, 49, 52, 51, 50, 57, 58, 64, 65, 85, 86, 116, 117, 115, 114, 111, 110, 108, 104, 105, 106, 107, 173, 174, 172, 171, 170, 169, 101, 102, 103, 109, 89, 81, 82, 83, 88, 112, 113, 87, 84, 66, 67, 69, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 90, 91, 92, 93, 94, 97, 96, 95, 98, 99, 100, 168, 167, 166, 165, 164, 163, 162, 161, 175, 160, 159, 158, 157, 119, 120, 121, 122, 123, 124, 125, 32, 30, 126, 127, 128, 130, 21, 20, 131, 132, 19, 129, 154, 155, 153, 156, 152, 151, 178, 177, 176, 181, 180, 179, 182, 183, 184, 185, 187, 186, 189, 188, 190, 191, 192, 193, 194, 201, 196, 195, 197, 198, 199, 145, 144, 200, 202, 203, 204, 205, 206, 207, 212, 213, 216, 217, 220, 221, 208, 209, 252, 255, 256, 248, 249, 250, 247, 244, 241, 243, 242, 240, 245, 239, 238, 231, 232, 237, 236, 233, 235, 234, 246, 251, 230, 229, 228, 227, 226, 225, 224, 223, 222, 219, 218, 215, 214, 211, 210, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 138, 150, 149, 139, 148, 147, 142, 146, 143, 141, 140, 137, 267, 136, 268, 135, 269, 134, 270, 133, 18, 17, 16, 271, 272, 273, 274, 275, 276, 277, 279, 278, 3, 280, 2], 'time': 0.8682148360021529}}, 'att48': {'optimal_solution': 10628, 'solutions': {'path_len': 12613.0, 'path': [1, 8, 22, 16, 3, 41, 34, 14, 25, 39, 48, 5, 42, 10, 35, 45, 24, 26, 4, 2, 29, 32, 21, 47, 11, 13, 23, 12, 15, 40, 9, 33, 20, 46, 18, 36, 6, 30, 43, 27, 17, 19, 37, 28, 7, 44, 31, 38], 'time': 0.03813874400293571}}, 'bayg29': {'optimal_solution': 1610, 'solutions': {'path_len': 1765.0, 'path': [1, 24, 27, 16, 8, 23, 7, 25, 19, 15, 18, 14, 22, 17, 11, 4, 10, 13, 20, 2, 21, 5, 26, 29, 3, 9, 6, 12, 28], 'time': 0.006593512000108603}}, 'bays29': {'optimal_solution': 2020, 'solutions': {'path_len': 2123.0, 'path': [1, 8, 27, 23, 7, 25, 19, 15, 18, 14, 17, 22, 11, 4, 10, 20, 13, 16, 24, 21, 2, 3, 29, 26, 5, 9, 6, 12, 28], 'time': 0.013370502001635032}}, 'berlin52': {'optimal_solution': 7542, 'solutions': {'path_len': 8591.0, 'path': [1, 49, 36, 32, 45, 19, 41, 8, 10, 9, 33, 43, 15, 5, 6, 4, 25, 12, 51, 11, 52, 13, 14, 27, 47, 26, 28, 46, 48, 24, 38, 40, 37, 39, 35, 34, 44, 16, 50, 29, 20, 23, 30, 2, 7, 42, 21, 31, 18, 3, 17, 22], 'time': 0.02065987600144581}}, 'brg180': {'optimal_solution': 1950, 'solutions': {'path_len': 121570.0, 'path': [0, 108, 119, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 107, 132, 143, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 95, 144, 155, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 71, 72, 83, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 59, 168, 179, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 47, 120, 131, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 35, 156, 167, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 23, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 'time': 0.09724406000168528}}, 'ch130': {'optimal_solution': 6110, 'solutions': {'path_len': 6773.0, 'path': [1, 39, 117, 112, 105, 62, 115, 28, 128, 16, 45, 76, 11, 5, 109, 61, 129, 124, 64, 69, 88, 86, 26, 97, 7, 70, 63, 68, 98, 110, 89, 25, 48, 32, 113, 36, 84, 119, 111, 123, 101, 82, 57, 65, 56, 9, 52, 75, 74, 99, 73, 92, 38, 87, 12, 81, 103, 77, 94, 29, 15, 24, 116, 100, 27, 31, 17, 34, 127, 107, 104, 43, 19, 95, 79, 106, 58, 49, 91, 72, 53, 120, 60, 51, 42, 44, 40, 47, 122, 55, 6, 102, 10, 14, 96, 67, 13, 23, 37, 22, 93, 20, 46, 33, 21, 18, 114, 126, 121, 78, 66, 85, 125, 90, 59, 30, 83, 3, 108, 8, 80, 118, 54, 35, 4, 2, 50, 130, 71, 41], 'time': 0.1524205920031818}}, 'ch150': {'optimal_solution': 6528, 'solutions': {'path_len': 7135.0, 'path': [1, 87, 76, 73, 48, 63, 30, 84, 7, 8, 89, 96, 35, 93, 126, 33, 92, 54, 46, 134, 138, 90, 25, 20, 110, 81, 29, 86, 135, 108, 70, 50, 58, 141, 83, 56, 26, 146, 75, 18, 142, 85, 132, 65, 55, 137, 102, 114, 99, 19, 2, 37, 9, 28, 6, 42, 120, 139, 40, 53, 24, 118, 127, 69, 36, 61, 11, 148, 130, 60, 66, 17, 140, 117, 57, 39, 41, 101, 116, 12, 47, 51, 109, 43, 67, 32, 38, 23, 131, 77, 133, 16, 59, 79, 121, 88, 94, 10, 113, 3, 62, 149, 125, 22, 21, 150, 115, 44, 71, 45, 104, 4, 128, 68, 119, 91, 106, 13, 74, 136, 112, 64, 123, 31, 27, 129, 144, 49, 145, 147, 72, 14, 80, 122, 78, 15, 111, 105, 52, 124, 97, 100, 143, 5, 107, 95, 82, 103, 98, 34], 'time': 0.16610973700153409}}, 'eil101': {'optimal_solution': 629, 'solutions': {'path_len': 707.0, 'path': [1, 50, 76, 77, 68, 80, 54, 55, 25, 4, 56, 39, 67, 23, 75, 22, 41, 74, 72, 73, 21, 40, 58, 26, 12, 24, 29, 3, 79, 78, 34, 33, 81, 9, 51, 71, 65, 35, 66, 20, 30, 70, 31, 88, 62, 11, 63, 90, 32, 10, 19, 64, 49, 36, 47, 48, 82, 46, 8, 83, 60, 18, 52, 7, 45, 17, 84, 5, 99, 96, 59, 92, 93, 85, 61, 16, 86, 38, 14, 44, 91, 100, 37, 98, 97, 87, 42, 43, 15, 57, 2, 95, 94, 89, 6, 13, 53, 101, 28, 27, 69], 'time': 0.1271009200027038}}, 'eil51': {'optimal_solution': 426, 'solutions': {'path_len': 462.0, 'path': [1, 22, 27, 51, 46, 12, 47, 4, 18, 17, 37, 15, 33, 45, 44, 42, 19, 40, 41, 13, 25, 14, 6, 48, 23, 24, 43, 7, 8, 26, 31, 28, 3, 20, 35, 36, 29, 21, 50, 34, 30, 39, 10, 49, 9, 16, 2, 38, 5, 11, 32], 'time': 0.018575170997792156}}}}
